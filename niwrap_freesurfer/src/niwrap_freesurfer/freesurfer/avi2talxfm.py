# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

AVI2TALXFM_METADATA = Metadata(
    id="b2655b0f30995a088bcf42b9c6db2e6477fd8f33.boutiques",
    name="avi2talxfm",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


Avi2talxfmParameters = typing.TypedDict('Avi2talxfmParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/avi2talxfm"]],
    "input_volume": InputPathType,
    "target_volume": InputPathType,
    "vox2vox_transform": InputPathType,
    "output_xfm": str,
})
Avi2talxfmParametersTagged = typing.TypedDict('Avi2talxfmParametersTagged', {
    "@type": typing.Literal["freesurfer/avi2talxfm"],
    "input_volume": InputPathType,
    "target_volume": InputPathType,
    "vox2vox_transform": InputPathType,
    "output_xfm": str,
})


class Avi2talxfmOutputs(typing.NamedTuple):
    """
    Output object returned when calling `Avi2talxfmParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_xfm_file: OutputPathType
    """Resulting MNI transform file"""


def avi2talxfm_params(
    input_volume: InputPathType,
    target_volume: InputPathType,
    vox2vox_transform: InputPathType,
    output_xfm: str,
) -> Avi2talxfmParametersTagged:
    """
    Build parameters.
    
    Args:
        input_volume: Input volume file.
        target_volume: Target volume file.
        vox2vox_transform: Voxel-to-voxel transform file.
        output_xfm: Output MNI transform file.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/avi2talxfm",
        "input_volume": input_volume,
        "target_volume": target_volume,
        "vox2vox_transform": vox2vox_transform,
        "output_xfm": output_xfm,
    }
    return params


def avi2talxfm_cargs(
    params: Avi2talxfmParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("avi2talxfm")
    cargs.append(execution.input_file(params.get("input_volume", None)))
    cargs.append(execution.input_file(params.get("target_volume", None)))
    cargs.append(execution.input_file(params.get("vox2vox_transform", None)))
    cargs.append(params.get("output_xfm", None))
    return cargs


def avi2talxfm_outputs(
    params: Avi2talxfmParameters,
    execution: Execution,
) -> Avi2talxfmOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = Avi2talxfmOutputs(
        root=execution.output_file("."),
        output_xfm_file=execution.output_file(params.get("output_xfm", None)),
    )
    return ret


def avi2talxfm_execute(
    params: Avi2talxfmParameters,
    runner: Runner | None = None,
) -> Avi2talxfmOutputs:
    """
    avi2talxfm
    
    Convert voxel-to-voxel transform to MNI transform.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `Avi2talxfmOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(AVI2TALXFM_METADATA)
    params = execution.params(params)
    cargs = avi2talxfm_cargs(params, execution)
    ret = avi2talxfm_outputs(params, execution)
    execution.run(cargs)
    return ret


def avi2talxfm(
    input_volume: InputPathType,
    target_volume: InputPathType,
    vox2vox_transform: InputPathType,
    output_xfm: str,
    runner: Runner | None = None,
) -> Avi2talxfmOutputs:
    """
    avi2talxfm
    
    Convert voxel-to-voxel transform to MNI transform.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_volume: Input volume file.
        target_volume: Target volume file.
        vox2vox_transform: Voxel-to-voxel transform file.
        output_xfm: Output MNI transform file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `Avi2talxfmOutputs`).
    """
    params = avi2talxfm_params(
        input_volume=input_volume,
        target_volume=target_volume,
        vox2vox_transform=vox2vox_transform,
        output_xfm=output_xfm,
    )
    return avi2talxfm_execute(params, runner)


__all__ = [
    "AVI2TALXFM_METADATA",
    "Avi2talxfmOutputs",
    "avi2talxfm",
    "avi2talxfm_execute",
    "avi2talxfm_params",
]
