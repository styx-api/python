# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

DCMDIR_INFO_MGH_METADATA = Metadata(
    id="ff157bb6f0f3351f04caa2610173225c28c8297c.boutiques",
    name="dcmdir-info-mgh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


DcmdirInfoMghParameters = typing.TypedDict('DcmdirInfoMghParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/dcmdir-info-mgh"]],
    "dicomdir": str,
    "unpackdir": typing.NotRequired[str | None],
    "version": bool,
    "help": bool,
    "nopre": bool,
})
DcmdirInfoMghParametersTagged = typing.TypedDict('DcmdirInfoMghParametersTagged', {
    "@type": typing.Literal["freesurfer/dcmdir-info-mgh"],
    "dicomdir": str,
    "unpackdir": typing.NotRequired[str | None],
    "version": bool,
    "help": bool,
    "nopre": bool,
})


class DcmdirInfoMghOutputs(typing.NamedTuple):
    """
    Output object returned when calling `DcmdirInfoMghParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def dcmdir_info_mgh_params(
    dicomdir: str,
    unpackdir: str | None = None,
    version: bool = False,
    help_: bool = False,
    nopre: bool = False,
) -> DcmdirInfoMghParametersTagged:
    """
    Build parameters.
    
    Args:
        dicomdir: Input DICOM directory.
        unpackdir: Directory where the unpacked data will be stored (optional).\
            If specified, DICOM files are converted to MGZ format.
        version: Print version and exit.
        help_: Print help and exit.
        nopre: Do not assume filenames use the NNNNNN- prefix convention.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/dcmdir-info-mgh",
        "dicomdir": dicomdir,
        "version": version,
        "help": help_,
        "nopre": nopre,
    }
    if unpackdir is not None:
        params["unpackdir"] = unpackdir
    return params


def dcmdir_info_mgh_cargs(
    params: DcmdirInfoMghParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("dcmdir-info-mgh")
    cargs.extend([
        "-mgh",
        params.get("dicomdir", None)
    ])
    if params.get("unpackdir", None) is not None:
        cargs.append(params.get("unpackdir", None))
    if params.get("version", False):
        cargs.append("--version")
    if params.get("help", False):
        cargs.append("--help")
    if params.get("nopre", False):
        cargs.append("--nopre")
    return cargs


def dcmdir_info_mgh_outputs(
    params: DcmdirInfoMghParameters,
    execution: Execution,
) -> DcmdirInfoMghOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = DcmdirInfoMghOutputs(
        root=execution.output_file("."),
    )
    return ret


def dcmdir_info_mgh_execute(
    params: DcmdirInfoMghParameters,
    runner: Runner | None = None,
) -> DcmdirInfoMghOutputs:
    """
    dcmdir-info-mgh
    
    Scans a DICOM directory and extracts information about each series.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DcmdirInfoMghOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DCMDIR_INFO_MGH_METADATA)
    params = execution.params(params)
    cargs = dcmdir_info_mgh_cargs(params, execution)
    ret = dcmdir_info_mgh_outputs(params, execution)
    execution.run(cargs)
    return ret


def dcmdir_info_mgh(
    dicomdir: str,
    unpackdir: str | None = None,
    version: bool = False,
    help_: bool = False,
    nopre: bool = False,
    runner: Runner | None = None,
) -> DcmdirInfoMghOutputs:
    """
    dcmdir-info-mgh
    
    Scans a DICOM directory and extracts information about each series.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        dicomdir: Input DICOM directory.
        unpackdir: Directory where the unpacked data will be stored (optional).\
            If specified, DICOM files are converted to MGZ format.
        version: Print version and exit.
        help_: Print help and exit.
        nopre: Do not assume filenames use the NNNNNN- prefix convention.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DcmdirInfoMghOutputs`).
    """
    params = dcmdir_info_mgh_params(
        dicomdir=dicomdir,
        unpackdir=unpackdir,
        version=version,
        help_=help_,
        nopre=nopre,
    )
    return dcmdir_info_mgh_execute(params, runner)


__all__ = [
    "DCMDIR_INFO_MGH_METADATA",
    "DcmdirInfoMghOutputs",
    "dcmdir_info_mgh",
    "dcmdir_info_mgh_execute",
    "dcmdir_info_mgh_params",
]
