# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

DICOM_RENAME_METADATA = Metadata(
    id="ca4d93c3e9518d2c158aeb7b4b47f5257f9ce799.boutiques",
    name="dicom-rename",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


DicomRenameParameters = typing.TypedDict('DicomRenameParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/dicom-rename"]],
    "input_files": list[InputPathType],
    "output_base": str,
    "version": bool,
    "help": bool,
})
DicomRenameParametersTagged = typing.TypedDict('DicomRenameParametersTagged', {
    "@type": typing.Literal["freesurfer/dicom-rename"],
    "input_files": list[InputPathType],
    "output_base": str,
    "version": bool,
    "help": bool,
})


class DicomRenameOutputs(typing.NamedTuple):
    """
    Output object returned when calling `DicomRenameParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    renamed_dicom: OutputPathType
    """Renamed output DICOM file with series and image numbers."""


def dicom_rename_params(
    input_files: list[InputPathType],
    output_base: str,
    version: bool = False,
    help_: bool = False,
) -> DicomRenameParametersTagged:
    """
    Build parameters.
    
    Args:
        input_files: Input DICOM files to be renamed.
        output_base: Base name for output files that includes series and image\
            numbers.
        version: Print version and exit.
        help_: Print help and exit.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/dicom-rename",
        "input_files": input_files,
        "output_base": output_base,
        "version": version,
        "help": help_,
    }
    return params


def dicom_rename_cargs(
    params: DicomRenameParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("dicom-rename")
    cargs.extend([
        "-rename",
        *[execution.input_file(f) for f in params.get("input_files", None)]
    ])
    cargs.extend([
        "--o",
        params.get("output_base", None)
    ])
    if params.get("version", False):
        cargs.append("--version")
    if params.get("help", False):
        cargs.append("--help")
    return cargs


def dicom_rename_outputs(
    params: DicomRenameParameters,
    execution: Execution,
) -> DicomRenameOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = DicomRenameOutputs(
        root=execution.output_file("."),
        renamed_dicom=execution.output_file(params.get("output_base", None) + "-SSS-IIIII.dcm"),
    )
    return ret


def dicom_rename_execute(
    params: DicomRenameParameters,
    runner: Runner | None = None,
) -> DicomRenameOutputs:
    """
    dicom-rename
    
    Copies dicom file(s) to new path with more meaningful names.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DicomRenameOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DICOM_RENAME_METADATA)
    params = execution.params(params)
    cargs = dicom_rename_cargs(params, execution)
    ret = dicom_rename_outputs(params, execution)
    execution.run(cargs)
    return ret


def dicom_rename(
    input_files: list[InputPathType],
    output_base: str,
    version: bool = False,
    help_: bool = False,
    runner: Runner | None = None,
) -> DicomRenameOutputs:
    """
    dicom-rename
    
    Copies dicom file(s) to new path with more meaningful names.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_files: Input DICOM files to be renamed.
        output_base: Base name for output files that includes series and image\
            numbers.
        version: Print version and exit.
        help_: Print help and exit.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DicomRenameOutputs`).
    """
    params = dicom_rename_params(
        input_files=input_files,
        output_base=output_base,
        version=version,
        help_=help_,
    )
    return dicom_rename_execute(params, runner)


__all__ = [
    "DICOM_RENAME_METADATA",
    "DicomRenameOutputs",
    "dicom_rename",
    "dicom_rename_execute",
    "dicom_rename_params",
]
