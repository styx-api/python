# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

DMRI_COLORED_FA_METADATA = Metadata(
    id="718feafd2d16e543f6009bc9e147cd221438c40e.boutiques",
    name="dmri_coloredFA",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


DmriColoredFaParameters = typing.TypedDict('DmriColoredFaParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/dmri_coloredFA"]],
    "input_volume": InputPathType,
    "output_volume": str,
})
DmriColoredFaParametersTagged = typing.TypedDict('DmriColoredFaParametersTagged', {
    "@type": typing.Literal["freesurfer/dmri_coloredFA"],
    "input_volume": InputPathType,
    "output_volume": str,
})


class DmriColoredFaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `DmriColoredFaParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_colored_fa: OutputPathType
    """The output colored FA image."""


def dmri_colored_fa_params(
    input_volume: InputPathType,
    output_volume: str = "colored_FA",
) -> DmriColoredFaParametersTagged:
    """
    Build parameters.
    
    Args:
        input_volume: Input diffusion MRI volume.
        output_volume: Output colored FA image.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/dmri_coloredFA",
        "input_volume": input_volume,
        "output_volume": output_volume,
    }
    return params


def dmri_colored_fa_cargs(
    params: DmriColoredFaParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("dmri_coloredFA")
    cargs.append(execution.input_file(params.get("input_volume", None)))
    cargs.append(params.get("output_volume", "colored_FA"))
    return cargs


def dmri_colored_fa_outputs(
    params: DmriColoredFaParameters,
    execution: Execution,
) -> DmriColoredFaOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = DmriColoredFaOutputs(
        root=execution.output_file("."),
        output_colored_fa=execution.output_file(params.get("output_volume", "colored_FA") + ".nii.gz"),
    )
    return ret


def dmri_colored_fa_execute(
    params: DmriColoredFaParameters,
    runner: Runner | None = None,
) -> DmriColoredFaOutputs:
    """
    dmri_coloredFA
    
    Tool for generating colored FA maps from diffusion MRI data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriColoredFaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DMRI_COLORED_FA_METADATA)
    params = execution.params(params)
    cargs = dmri_colored_fa_cargs(params, execution)
    ret = dmri_colored_fa_outputs(params, execution)
    execution.run(cargs)
    return ret


def dmri_colored_fa(
    input_volume: InputPathType,
    output_volume: str = "colored_FA",
    runner: Runner | None = None,
) -> DmriColoredFaOutputs:
    """
    dmri_coloredFA
    
    Tool for generating colored FA maps from diffusion MRI data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_volume: Input diffusion MRI volume.
        output_volume: Output colored FA image.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriColoredFaOutputs`).
    """
    params = dmri_colored_fa_params(
        input_volume=input_volume,
        output_volume=output_volume,
    )
    return dmri_colored_fa_execute(params, runner)


__all__ = [
    "DMRI_COLORED_FA_METADATA",
    "DmriColoredFaOutputs",
    "dmri_colored_fa",
    "dmri_colored_fa_execute",
    "dmri_colored_fa_params",
]
