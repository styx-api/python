# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

DMRI_GROUP_BY_ENDPOINTS_METADATA = Metadata(
    id="4ef63d1408c6a62e2a9cb214c784c2c56fa402f9.boutiques",
    name="dmri_groupByEndpoints",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


DmriGroupByEndpointsParameters = typing.TypedDict('DmriGroupByEndpointsParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/dmri_groupByEndpoints"]],
    "streamline_file": InputPathType,
    "image_file": InputPathType,
    "output_directory": str,
})
DmriGroupByEndpointsParametersTagged = typing.TypedDict('DmriGroupByEndpointsParametersTagged', {
    "@type": typing.Literal["freesurfer/dmri_groupByEndpoints"],
    "streamline_file": InputPathType,
    "image_file": InputPathType,
    "output_directory": str,
})


class DmriGroupByEndpointsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `DmriGroupByEndpointsParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def dmri_group_by_endpoints_params(
    streamline_file: InputPathType,
    image_file: InputPathType,
    output_directory: str,
) -> DmriGroupByEndpointsParametersTagged:
    """
    Build parameters.
    
    Args:
        streamline_file: The file containing streamline data.
        image_file: The image file to be used in grouping.
        output_directory: The directory where output will be saved.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/dmri_groupByEndpoints",
        "streamline_file": streamline_file,
        "image_file": image_file,
        "output_directory": output_directory,
    }
    return params


def dmri_group_by_endpoints_cargs(
    params: DmriGroupByEndpointsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("dmri_groupByEndpoints")
    cargs.extend([
        "-s",
        execution.input_file(params.get("streamline_file", None))
    ])
    cargs.extend([
        "-i",
        execution.input_file(params.get("image_file", None))
    ])
    cargs.extend([
        "-d",
        params.get("output_directory", None)
    ])
    return cargs


def dmri_group_by_endpoints_outputs(
    params: DmriGroupByEndpointsParameters,
    execution: Execution,
) -> DmriGroupByEndpointsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = DmriGroupByEndpointsOutputs(
        root=execution.output_file("."),
    )
    return ret


def dmri_group_by_endpoints_execute(
    params: DmriGroupByEndpointsParameters,
    runner: Runner | None = None,
) -> DmriGroupByEndpointsOutputs:
    """
    dmri_groupByEndpoints
    
    A tool to group streamlines by their endpoints using diffusion MRI data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriGroupByEndpointsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DMRI_GROUP_BY_ENDPOINTS_METADATA)
    params = execution.params(params)
    cargs = dmri_group_by_endpoints_cargs(params, execution)
    ret = dmri_group_by_endpoints_outputs(params, execution)
    execution.run(cargs)
    return ret


def dmri_group_by_endpoints(
    streamline_file: InputPathType,
    image_file: InputPathType,
    output_directory: str,
    runner: Runner | None = None,
) -> DmriGroupByEndpointsOutputs:
    """
    dmri_groupByEndpoints
    
    A tool to group streamlines by their endpoints using diffusion MRI data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        streamline_file: The file containing streamline data.
        image_file: The image file to be used in grouping.
        output_directory: The directory where output will be saved.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriGroupByEndpointsOutputs`).
    """
    params = dmri_group_by_endpoints_params(
        streamline_file=streamline_file,
        image_file=image_file,
        output_directory=output_directory,
    )
    return dmri_group_by_endpoints_execute(params, runner)


__all__ = [
    "DMRI_GROUP_BY_ENDPOINTS_METADATA",
    "DmriGroupByEndpointsOutputs",
    "dmri_group_by_endpoints",
    "dmri_group_by_endpoints_execute",
    "dmri_group_by_endpoints_params",
]
