# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

FIX_SUBJECT_CORRECTED_METADATA = Metadata(
    id="37aedcb6955e632e84589ffaec6cf6b262cfcf65.boutiques",
    name="fix_subject_corrected",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


FixSubjectCorrectedParameters = typing.TypedDict('FixSubjectCorrectedParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/fix_subject_corrected"]],
    "subject_directory": str,
    "output_directory": str,
})
FixSubjectCorrectedParametersTagged = typing.TypedDict('FixSubjectCorrectedParametersTagged', {
    "@type": typing.Literal["freesurfer/fix_subject_corrected"],
    "subject_directory": str,
    "output_directory": str,
})


class FixSubjectCorrectedOutputs(typing.NamedTuple):
    """
    Output object returned when calling `FixSubjectCorrectedParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def fix_subject_corrected_params(
    subject_directory: str,
    output_directory: str,
) -> FixSubjectCorrectedParametersTagged:
    """
    Build parameters.
    
    Args:
        subject_directory: Path to the subject's directory.
        output_directory: Path to the output directory.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/fix_subject_corrected",
        "subject_directory": subject_directory,
        "output_directory": output_directory,
    }
    return params


def fix_subject_corrected_cargs(
    params: FixSubjectCorrectedParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("fix_subject_corrected")
    cargs.append(params.get("subject_directory", None))
    cargs.append(params.get("output_directory", None))
    return cargs


def fix_subject_corrected_outputs(
    params: FixSubjectCorrectedParameters,
    execution: Execution,
) -> FixSubjectCorrectedOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = FixSubjectCorrectedOutputs(
        root=execution.output_file("."),
    )
    return ret


def fix_subject_corrected_execute(
    params: FixSubjectCorrectedParameters,
    runner: Runner | None = None,
) -> FixSubjectCorrectedOutputs:
    """
    fix_subject_corrected
    
    Corrects subject data in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FixSubjectCorrectedOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FIX_SUBJECT_CORRECTED_METADATA)
    params = execution.params(params)
    cargs = fix_subject_corrected_cargs(params, execution)
    ret = fix_subject_corrected_outputs(params, execution)
    execution.run(cargs)
    return ret


def fix_subject_corrected(
    subject_directory: str,
    output_directory: str,
    runner: Runner | None = None,
) -> FixSubjectCorrectedOutputs:
    """
    fix_subject_corrected
    
    Corrects subject data in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_directory: Path to the subject's directory.
        output_directory: Path to the output directory.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FixSubjectCorrectedOutputs`).
    """
    params = fix_subject_corrected_params(
        subject_directory=subject_directory,
        output_directory=output_directory,
    )
    return fix_subject_corrected_execute(params, runner)


__all__ = [
    "FIX_SUBJECT_CORRECTED_METADATA",
    "FixSubjectCorrectedOutputs",
    "fix_subject_corrected",
    "fix_subject_corrected_execute",
    "fix_subject_corrected_params",
]
