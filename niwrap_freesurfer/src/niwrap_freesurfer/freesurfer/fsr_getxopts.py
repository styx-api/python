# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

FSR_GETXOPTS_METADATA = Metadata(
    id="99d8c486b8e278b01e051129f89738f615f5b4b0.boutiques",
    name="fsr-getxopts",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


FsrGetxoptsParameters = typing.TypedDict('FsrGetxoptsParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/fsr-getxopts"]],
    "help": bool,
})
FsrGetxoptsParametersTagged = typing.TypedDict('FsrGetxoptsParametersTagged', {
    "@type": typing.Literal["freesurfer/fsr-getxopts"],
    "help": bool,
})


class FsrGetxoptsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `FsrGetxoptsParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def fsr_getxopts_params(
    help_: bool = False,
) -> FsrGetxoptsParametersTagged:
    """
    Build parameters.
    
    Args:
        help_: Display the help message and exit.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/fsr-getxopts",
        "help": help_,
    }
    return params


def fsr_getxopts_cargs(
    params: FsrGetxoptsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("fsr-getxopts")
    if params.get("help", False):
        cargs.append("--help")
    return cargs


def fsr_getxopts_outputs(
    params: FsrGetxoptsParameters,
    execution: Execution,
) -> FsrGetxoptsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = FsrGetxoptsOutputs(
        root=execution.output_file("."),
    )
    return ret


def fsr_getxopts_execute(
    params: FsrGetxoptsParameters,
    runner: Runner | None = None,
) -> FsrGetxoptsOutputs:
    """
    fsr-getxopts
    
    Tool to retrieve extended options for a specific context or configuration.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FsrGetxoptsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FSR_GETXOPTS_METADATA)
    params = execution.params(params)
    cargs = fsr_getxopts_cargs(params, execution)
    ret = fsr_getxopts_outputs(params, execution)
    execution.run(cargs)
    return ret


def fsr_getxopts(
    help_: bool = False,
    runner: Runner | None = None,
) -> FsrGetxoptsOutputs:
    """
    fsr-getxopts
    
    Tool to retrieve extended options for a specific context or configuration.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        help_: Display the help message and exit.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FsrGetxoptsOutputs`).
    """
    params = fsr_getxopts_params(
        help_=help_,
    )
    return fsr_getxopts_execute(params, runner)


__all__ = [
    "FSR_GETXOPTS_METADATA",
    "FsrGetxoptsOutputs",
    "fsr_getxopts",
    "fsr_getxopts_execute",
    "fsr_getxopts_params",
]
