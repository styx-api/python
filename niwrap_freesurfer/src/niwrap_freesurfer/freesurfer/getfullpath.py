# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

GETFULLPATH_METADATA = Metadata(
    id="be3b33470859b2e66c0b16b94c22d7bb619bc559.boutiques",
    name="getfullpath",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


GetfullpathParameters = typing.TypedDict('GetfullpathParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/getfullpath"]],
    "filename": str,
})
GetfullpathParametersTagged = typing.TypedDict('GetfullpathParametersTagged', {
    "@type": typing.Literal["freesurfer/getfullpath"],
    "filename": str,
})


class GetfullpathOutputs(typing.NamedTuple):
    """
    Output object returned when calling `GetfullpathParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def getfullpath_params(
    filename: str,
) -> GetfullpathParametersTagged:
    """
    Build parameters.
    
    Args:
        filename: Filename for which to get the full path.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/getfullpath",
        "filename": filename,
    }
    return params


def getfullpath_cargs(
    params: GetfullpathParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("getfullpath")
    cargs.append(params.get("filename", None))
    return cargs


def getfullpath_outputs(
    params: GetfullpathParameters,
    execution: Execution,
) -> GetfullpathOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = GetfullpathOutputs(
        root=execution.output_file("."),
    )
    return ret


def getfullpath_execute(
    params: GetfullpathParameters,
    runner: Runner | None = None,
) -> GetfullpathOutputs:
    """
    getfullpath
    
    A utility to retrieve the full path of a specified file or directory.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GetfullpathOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(GETFULLPATH_METADATA)
    params = execution.params(params)
    cargs = getfullpath_cargs(params, execution)
    ret = getfullpath_outputs(params, execution)
    execution.run(cargs)
    return ret


def getfullpath(
    filename: str,
    runner: Runner | None = None,
) -> GetfullpathOutputs:
    """
    getfullpath
    
    A utility to retrieve the full path of a specified file or directory.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        filename: Filename for which to get the full path.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GetfullpathOutputs`).
    """
    params = getfullpath_params(
        filename=filename,
    )
    return getfullpath_execute(params, runner)


__all__ = [
    "GETFULLPATH_METADATA",
    "GetfullpathOutputs",
    "getfullpath",
    "getfullpath_execute",
    "getfullpath_params",
]
