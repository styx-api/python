# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

GROUPSTATSDIFF_METADATA = Metadata(
    id="737e572b68d7acaf48ce6e41a064fe62f0b93177.boutiques",
    name="groupstatsdiff",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


GroupstatsdiffParameters = typing.TypedDict('GroupstatsdiffParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/groupstatsdiff"]],
    "group1_dir": str,
    "group2_dir": str,
    "output_dir": str,
    "no_maps": bool,
    "osgm": bool,
    "no_common": bool,
    "allow_subj_diff": bool,
    "no_area": bool,
    "no_volume": bool,
    "no_ba": bool,
    "no_aparcstats": bool,
    "no_asegstats": bool,
    "no_wparcstats": bool,
    "no_stats": bool,
    "no_prune": bool,
    "fwhm_value": typing.NotRequired[float | None],
    "subjects_dir1": typing.NotRequired[str | None],
    "subjects_dir2": typing.NotRequired[str | None],
    "no_dice": bool,
    "dice_ctab": typing.NotRequired[str | None],
})
GroupstatsdiffParametersTagged = typing.TypedDict('GroupstatsdiffParametersTagged', {
    "@type": typing.Literal["freesurfer/groupstatsdiff"],
    "group1_dir": str,
    "group2_dir": str,
    "output_dir": str,
    "no_maps": bool,
    "osgm": bool,
    "no_common": bool,
    "allow_subj_diff": bool,
    "no_area": bool,
    "no_volume": bool,
    "no_ba": bool,
    "no_aparcstats": bool,
    "no_asegstats": bool,
    "no_wparcstats": bool,
    "no_stats": bool,
    "no_prune": bool,
    "fwhm_value": typing.NotRequired[float | None],
    "subjects_dir1": typing.NotRequired[str | None],
    "subjects_dir2": typing.NotRequired[str | None],
    "no_dice": bool,
    "dice_ctab": typing.NotRequired[str | None],
})


class GroupstatsdiffOutputs(typing.NamedTuple):
    """
    Output object returned when calling `GroupstatsdiffParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def groupstatsdiff_params(
    group1_dir: str,
    group2_dir: str,
    output_dir: str,
    no_maps: bool = False,
    osgm: bool = False,
    no_common: bool = False,
    allow_subj_diff: bool = False,
    no_area: bool = False,
    no_volume: bool = False,
    no_ba: bool = False,
    no_aparcstats: bool = False,
    no_asegstats: bool = False,
    no_wparcstats: bool = False,
    no_stats: bool = False,
    no_prune: bool = False,
    fwhm_value: float | None = None,
    subjects_dir1: str | None = None,
    subjects_dir2: str | None = None,
    no_dice: bool = False,
    dice_ctab: str | None = None,
) -> GroupstatsdiffParametersTagged:
    """
    Build parameters.
    
    Args:
        group1_dir: Output folder from groupstats for group 1.
        group2_dir: Output folder from groupstats for group 2.
        output_dir: Output folder for the difference analysis.
        no_maps: Only analyze ROI data, no maps.
        osgm: Use OSGM instead of native FSGD.
        no_common: Do not select common segments when running stattablediff.
        allow_subj_diff: Allow list of subjects to be different between the two\
            analyses.
        no_area: Do not compute area differences.
        no_volume: Do not compute volume differences.
        no_ba: Do not compute differences for BA labels.
        no_aparcstats: Do not do aparcstats.
        no_asegstats: Do not do asegstats.
        no_wparcstats: Do not do wmparcstats.
        no_stats: Do not do any ROI stats.
        no_prune: Do not prune when running mri_glmfit.
        fwhm_value: Override the FWHM from group analysis.
        subjects_dir1: Subjects directory 1 for computing dice (default is\
            parent dir of groupdir).
        subjects_dir2: Subjects directory 2 for computing dice (default is\
            parent dir of groupdir).
        no_dice: Do not compute dice.
        dice_ctab: CTAB to use for dice computation (default is\
            /usr/local/freesurfer/ASegStatsLUT.txt).
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/groupstatsdiff",
        "group1_dir": group1_dir,
        "group2_dir": group2_dir,
        "output_dir": output_dir,
        "no_maps": no_maps,
        "osgm": osgm,
        "no_common": no_common,
        "allow_subj_diff": allow_subj_diff,
        "no_area": no_area,
        "no_volume": no_volume,
        "no_ba": no_ba,
        "no_aparcstats": no_aparcstats,
        "no_asegstats": no_asegstats,
        "no_wparcstats": no_wparcstats,
        "no_stats": no_stats,
        "no_prune": no_prune,
        "no_dice": no_dice,
    }
    if fwhm_value is not None:
        params["fwhm_value"] = fwhm_value
    if subjects_dir1 is not None:
        params["subjects_dir1"] = subjects_dir1
    if subjects_dir2 is not None:
        params["subjects_dir2"] = subjects_dir2
    if dice_ctab is not None:
        params["dice_ctab"] = dice_ctab
    return params


def groupstatsdiff_cargs(
    params: GroupstatsdiffParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("groupstatsdiff")
    cargs.extend([
        "-g1",
        params.get("group1_dir", None)
    ])
    cargs.extend([
        "-g2",
        params.get("group2_dir", None)
    ])
    cargs.extend([
        "-o",
        params.get("output_dir", None)
    ])
    if params.get("no_maps", False):
        cargs.append("--no-maps")
    if params.get("osgm", False):
        cargs.append("--osgm")
    if params.get("no_common", False):
        cargs.append("--no-common")
    if params.get("allow_subj_diff", False):
        cargs.append("--allow-subj-diff")
    if params.get("no_area", False):
        cargs.append("--no-area")
    if params.get("no_volume", False):
        cargs.append("--no-volume")
    if params.get("no_ba", False):
        cargs.append("--no-ba")
    if params.get("no_aparcstats", False):
        cargs.append("--no-aparcstats")
    if params.get("no_asegstats", False):
        cargs.append("--no-asegstats")
    if params.get("no_wparcstats", False):
        cargs.append("--no-wparcstats")
    if params.get("no_stats", False):
        cargs.append("--no-stats")
    if params.get("no_prune", False):
        cargs.append("--no-prune")
    if params.get("fwhm_value", None) is not None:
        cargs.extend([
            "--fwhm",
            str(params.get("fwhm_value", None))
        ])
    if params.get("subjects_dir1", None) is not None:
        cargs.extend([
            "--sd1",
            params.get("subjects_dir1", None)
        ])
    if params.get("subjects_dir2", None) is not None:
        cargs.extend([
            "--sd2",
            params.get("subjects_dir2", None)
        ])
    if params.get("no_dice", False):
        cargs.append("--no-dice")
    if params.get("dice_ctab", None) is not None:
        cargs.extend([
            "--dice-ctab",
            params.get("dice_ctab", None)
        ])
    return cargs


def groupstatsdiff_outputs(
    params: GroupstatsdiffParameters,
    execution: Execution,
) -> GroupstatsdiffOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = GroupstatsdiffOutputs(
        root=execution.output_file("."),
    )
    return ret


def groupstatsdiff_execute(
    params: GroupstatsdiffParameters,
    runner: Runner | None = None,
) -> GroupstatsdiffOutputs:
    """
    groupstatsdiff
    
    Evaluate the differences between two groupstats outputs from recon-all
    analyses in Freesurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GroupstatsdiffOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(GROUPSTATSDIFF_METADATA)
    params = execution.params(params)
    cargs = groupstatsdiff_cargs(params, execution)
    ret = groupstatsdiff_outputs(params, execution)
    execution.run(cargs)
    return ret


def groupstatsdiff(
    group1_dir: str,
    group2_dir: str,
    output_dir: str,
    no_maps: bool = False,
    osgm: bool = False,
    no_common: bool = False,
    allow_subj_diff: bool = False,
    no_area: bool = False,
    no_volume: bool = False,
    no_ba: bool = False,
    no_aparcstats: bool = False,
    no_asegstats: bool = False,
    no_wparcstats: bool = False,
    no_stats: bool = False,
    no_prune: bool = False,
    fwhm_value: float | None = None,
    subjects_dir1: str | None = None,
    subjects_dir2: str | None = None,
    no_dice: bool = False,
    dice_ctab: str | None = None,
    runner: Runner | None = None,
) -> GroupstatsdiffOutputs:
    """
    groupstatsdiff
    
    Evaluate the differences between two groupstats outputs from recon-all
    analyses in Freesurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        group1_dir: Output folder from groupstats for group 1.
        group2_dir: Output folder from groupstats for group 2.
        output_dir: Output folder for the difference analysis.
        no_maps: Only analyze ROI data, no maps.
        osgm: Use OSGM instead of native FSGD.
        no_common: Do not select common segments when running stattablediff.
        allow_subj_diff: Allow list of subjects to be different between the two\
            analyses.
        no_area: Do not compute area differences.
        no_volume: Do not compute volume differences.
        no_ba: Do not compute differences for BA labels.
        no_aparcstats: Do not do aparcstats.
        no_asegstats: Do not do asegstats.
        no_wparcstats: Do not do wmparcstats.
        no_stats: Do not do any ROI stats.
        no_prune: Do not prune when running mri_glmfit.
        fwhm_value: Override the FWHM from group analysis.
        subjects_dir1: Subjects directory 1 for computing dice (default is\
            parent dir of groupdir).
        subjects_dir2: Subjects directory 2 for computing dice (default is\
            parent dir of groupdir).
        no_dice: Do not compute dice.
        dice_ctab: CTAB to use for dice computation (default is\
            /usr/local/freesurfer/ASegStatsLUT.txt).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GroupstatsdiffOutputs`).
    """
    params = groupstatsdiff_params(
        group1_dir=group1_dir,
        group2_dir=group2_dir,
        output_dir=output_dir,
        no_maps=no_maps,
        osgm=osgm,
        no_common=no_common,
        allow_subj_diff=allow_subj_diff,
        no_area=no_area,
        no_volume=no_volume,
        no_ba=no_ba,
        no_aparcstats=no_aparcstats,
        no_asegstats=no_asegstats,
        no_wparcstats=no_wparcstats,
        no_stats=no_stats,
        no_prune=no_prune,
        fwhm_value=fwhm_value,
        subjects_dir1=subjects_dir1,
        subjects_dir2=subjects_dir2,
        no_dice=no_dice,
        dice_ctab=dice_ctab,
    )
    return groupstatsdiff_execute(params, runner)


__all__ = [
    "GROUPSTATSDIFF_METADATA",
    "GroupstatsdiffOutputs",
    "groupstatsdiff",
    "groupstatsdiff_execute",
    "groupstatsdiff_params",
]
