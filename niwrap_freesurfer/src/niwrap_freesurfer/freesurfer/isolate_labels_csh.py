# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

ISOLATE_LABELS_CSH_METADATA = Metadata(
    id="e20006c5ec4b137448d99abb3104cf26b17519ce.boutiques",
    name="isolate_labels.csh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


IsolateLabelsCshParameters = typing.TypedDict('IsolateLabelsCshParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/isolate_labels.csh"]],
    "label_volume": InputPathType,
    "output_prefix": str,
    "label_option": typing.NotRequired[str | None],
    "lowercase_label_option": typing.NotRequired[str | None],
    "version": bool,
    "keepval": bool,
    "help": bool,
})
IsolateLabelsCshParametersTagged = typing.TypedDict('IsolateLabelsCshParametersTagged', {
    "@type": typing.Literal["freesurfer/isolate_labels.csh"],
    "label_volume": InputPathType,
    "output_prefix": str,
    "label_option": typing.NotRequired[str | None],
    "lowercase_label_option": typing.NotRequired[str | None],
    "version": bool,
    "keepval": bool,
    "help": bool,
})


class IsolateLabelsCshOutputs(typing.NamedTuple):
    """
    Output object returned when calling `IsolateLabelsCshParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def isolate_labels_csh_params(
    label_volume: InputPathType,
    output_prefix: str,
    label_option: str | None = None,
    lowercase_label_option: str | None = None,
    version: bool = False,
    keepval: bool = False,
    help_: bool = False,
) -> IsolateLabelsCshParametersTagged:
    """
    Build parameters.
    
    Args:
        label_volume: Label volume to be analyzed.
        output_prefix: Prefix of binary label file(s).
        label_option: The particular label to be analyzed; default is all\
            labels.
        lowercase_label_option: The particular label to be analyzed; default is\
            all labels.
        version: Print version and exit.
        keepval: Keeps original label values.
        help_: Print help and exit.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/isolate_labels.csh",
        "label_volume": label_volume,
        "output_prefix": output_prefix,
        "version": version,
        "keepval": keepval,
        "help": help_,
    }
    if label_option is not None:
        params["label_option"] = label_option
    if lowercase_label_option is not None:
        params["lowercase_label_option"] = lowercase_label_option
    return params


def isolate_labels_csh_cargs(
    params: IsolateLabelsCshParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("isolate_labels.csh")
    cargs.extend([
        "--vol",
        execution.input_file(params.get("label_volume", None))
    ])
    cargs.extend([
        "--outprefix",
        params.get("output_prefix", None)
    ])
    if params.get("label_option", None) is not None:
        cargs.extend([
            "--L",
            params.get("label_option", None)
        ])
    if params.get("lowercase_label_option", None) is not None:
        cargs.extend([
            "--l",
            params.get("lowercase_label_option", None)
        ])
    if params.get("version", False):
        cargs.append("--version")
    if params.get("keepval", False):
        cargs.append("--keepval")
    if params.get("help", False):
        cargs.append("--help")
    return cargs


def isolate_labels_csh_outputs(
    params: IsolateLabelsCshParameters,
    execution: Execution,
) -> IsolateLabelsCshOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = IsolateLabelsCshOutputs(
        root=execution.output_file("."),
    )
    return ret


def isolate_labels_csh_execute(
    params: IsolateLabelsCshParameters,
    runner: Runner | None = None,
) -> IsolateLabelsCshOutputs:
    """
    isolate_labels.csh
    
    Tool to separate out a particular or all labels into individual binary files
    for subsequent shape analysis.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `IsolateLabelsCshOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(ISOLATE_LABELS_CSH_METADATA)
    params = execution.params(params)
    cargs = isolate_labels_csh_cargs(params, execution)
    ret = isolate_labels_csh_outputs(params, execution)
    execution.run(cargs)
    return ret


def isolate_labels_csh(
    label_volume: InputPathType,
    output_prefix: str,
    label_option: str | None = None,
    lowercase_label_option: str | None = None,
    version: bool = False,
    keepval: bool = False,
    help_: bool = False,
    runner: Runner | None = None,
) -> IsolateLabelsCshOutputs:
    """
    isolate_labels.csh
    
    Tool to separate out a particular or all labels into individual binary files
    for subsequent shape analysis.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        label_volume: Label volume to be analyzed.
        output_prefix: Prefix of binary label file(s).
        label_option: The particular label to be analyzed; default is all\
            labels.
        lowercase_label_option: The particular label to be analyzed; default is\
            all labels.
        version: Print version and exit.
        keepval: Keeps original label values.
        help_: Print help and exit.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `IsolateLabelsCshOutputs`).
    """
    params = isolate_labels_csh_params(
        label_volume=label_volume,
        output_prefix=output_prefix,
        label_option=label_option,
        lowercase_label_option=lowercase_label_option,
        version=version,
        keepval=keepval,
        help_=help_,
    )
    return isolate_labels_csh_execute(params, runner)


__all__ = [
    "ISOLATE_LABELS_CSH_METADATA",
    "IsolateLabelsCshOutputs",
    "isolate_labels_csh",
    "isolate_labels_csh_execute",
    "isolate_labels_csh_params",
]
