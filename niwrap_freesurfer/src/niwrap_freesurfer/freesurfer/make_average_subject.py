# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MAKE_AVERAGE_SUBJECT_METADATA = Metadata(
    id="c746adceb1adb4c0559be3ecf5c93fe6c7f33526.boutiques",
    name="make_average_subject",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MakeAverageSubjectParameters = typing.TypedDict('MakeAverageSubjectParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/make_average_subject"]],
    "subjects": list[str],
    "fsgd_file": typing.NotRequired[InputPathType | None],
    "subject_list_file": typing.NotRequired[InputPathType | None],
    "average_subject_name": str,
    "sd_out": typing.NotRequired[str | None],
    "no_link": bool,
    "sdir": typing.NotRequired[str | None],
    "ico_order": typing.NotRequired[float | None],
    "transform_file": typing.NotRequired[InputPathType | None],
    "surface_registration": typing.NotRequired[str | None],
    "no_surfaces": bool,
    "no_volumes": bool,
    "force": bool,
    "keep_all_orig": bool,
    "no_symlink": bool,
    "no_ribbon": bool,
    "no_surf2surf": bool,
    "rca_threads": typing.NotRequired[float | None],
    "help": bool,
    "version": bool,
    "echo": bool,
    "debug": bool,
})
MakeAverageSubjectParametersTagged = typing.TypedDict('MakeAverageSubjectParametersTagged', {
    "@type": typing.Literal["freesurfer/make_average_subject"],
    "subjects": list[str],
    "fsgd_file": typing.NotRequired[InputPathType | None],
    "subject_list_file": typing.NotRequired[InputPathType | None],
    "average_subject_name": str,
    "sd_out": typing.NotRequired[str | None],
    "no_link": bool,
    "sdir": typing.NotRequired[str | None],
    "ico_order": typing.NotRequired[float | None],
    "transform_file": typing.NotRequired[InputPathType | None],
    "surface_registration": typing.NotRequired[str | None],
    "no_surfaces": bool,
    "no_volumes": bool,
    "force": bool,
    "keep_all_orig": bool,
    "no_symlink": bool,
    "no_ribbon": bool,
    "no_surf2surf": bool,
    "rca_threads": typing.NotRequired[float | None],
    "help": bool,
    "version": bool,
    "echo": bool,
    "debug": bool,
})


class MakeAverageSubjectOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MakeAverageSubjectParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def make_average_subject_params(
    subjects: list[str],
    average_subject_name: str,
    fsgd_file: InputPathType | None = None,
    subject_list_file: InputPathType | None = None,
    sd_out: str | None = None,
    no_link: bool = False,
    sdir: str | None = None,
    ico_order: float | None = None,
    transform_file: InputPathType | None = None,
    surface_registration: str | None = None,
    no_surfaces: bool = False,
    no_volumes: bool = False,
    force: bool = False,
    keep_all_orig: bool = False,
    no_symlink: bool = False,
    no_ribbon: bool = False,
    no_surf2surf: bool = False,
    rca_threads: float | None = None,
    help_: bool = False,
    version: bool = False,
    echo: bool = False,
    debug: bool = False,
) -> MakeAverageSubjectParametersTagged:
    """
    Build parameters.
    
    Args:
        subjects: List of subject names.
        average_subject_name: Name of the average subject.
        fsgd_file: Get subject list from a FreeSurfer Group Descriptor file.
        subject_list_file: Text file containing all subject names.
        sd_out: Directory to put output under instead of SUBJECTS_DIR.
        no_link: Do not link back to the original SUBJECTS_DIR with --sd-out.
        sdir: Use an alternative SUBJECTS_DIR instead of the default one in the\
            environment.
        ico_order: Change order of icosahedron.
        transform_file: Filename of transform file.
        surface_registration: Alternative registration surface name.
        no_surfaces: Do not make average surfaces.
        no_volumes: Do not make average volumes.
        force: Overwrite existing average subject data.
        keep_all_orig: Concatenate all original volumes into mri/orig.all.mgz.
        no_symlink: Do not use symbolic links with surfaces, copy files instead.
        no_ribbon: Do not create ribbon.mgz and aparc+aseg.mgz files.
        no_surf2surf: Use old parametric surface mapping method.
        rca_threads: Number of threads to pass to recon-all.
        help_: Show short descriptive help.
        version: Show script version info.
        echo: Enable command echo for debugging.
        debug: Enable debug mode, same as --echo.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/make_average_subject",
        "subjects": subjects,
        "average_subject_name": average_subject_name,
        "no_link": no_link,
        "no_surfaces": no_surfaces,
        "no_volumes": no_volumes,
        "force": force,
        "keep_all_orig": keep_all_orig,
        "no_symlink": no_symlink,
        "no_ribbon": no_ribbon,
        "no_surf2surf": no_surf2surf,
        "help": help_,
        "version": version,
        "echo": echo,
        "debug": debug,
    }
    if fsgd_file is not None:
        params["fsgd_file"] = fsgd_file
    if subject_list_file is not None:
        params["subject_list_file"] = subject_list_file
    if sd_out is not None:
        params["sd_out"] = sd_out
    if sdir is not None:
        params["sdir"] = sdir
    if ico_order is not None:
        params["ico_order"] = ico_order
    if transform_file is not None:
        params["transform_file"] = transform_file
    if surface_registration is not None:
        params["surface_registration"] = surface_registration
    if rca_threads is not None:
        params["rca_threads"] = rca_threads
    return params


def make_average_subject_cargs(
    params: MakeAverageSubjectParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("make_average_subject")
    cargs.extend([
        "--subjects",
        *params.get("subjects", None)
    ])
    if params.get("fsgd_file", None) is not None:
        cargs.extend([
            "--fsgd",
            execution.input_file(params.get("fsgd_file", None))
        ])
    if params.get("subject_list_file", None) is not None:
        cargs.extend([
            "--f",
            execution.input_file(params.get("subject_list_file", None))
        ])
    cargs.extend([
        "--out",
        params.get("average_subject_name", None)
    ])
    if params.get("sd_out", None) is not None:
        cargs.extend([
            "--sd-out",
            params.get("sd_out", None)
        ])
    if params.get("no_link", False):
        cargs.append("--no-link")
    if params.get("sdir", None) is not None:
        cargs.extend([
            "--sdir",
            params.get("sdir", None)
        ])
    if params.get("ico_order", None) is not None:
        cargs.extend([
            "--ico",
            str(params.get("ico_order", None))
        ])
    if params.get("transform_file", None) is not None:
        cargs.extend([
            "--xform",
            execution.input_file(params.get("transform_file", None))
        ])
    if params.get("surface_registration", None) is not None:
        cargs.extend([
            "--surf-reg",
            params.get("surface_registration", None)
        ])
    if params.get("no_surfaces", False):
        cargs.append("--no-surf")
    if params.get("no_volumes", False):
        cargs.append("--no-vol")
    if params.get("force", False):
        cargs.append("--force")
    if params.get("keep_all_orig", False):
        cargs.append("--keep-all-orig")
    if params.get("no_symlink", False):
        cargs.append("--no-symlink")
    if params.get("no_ribbon", False):
        cargs.append("--no-ribbon")
    if params.get("no_surf2surf", False):
        cargs.append("--no-surf2surf")
    if params.get("rca_threads", None) is not None:
        cargs.extend([
            "--rca-threads",
            str(params.get("rca_threads", None))
        ])
    if params.get("help", False):
        cargs.append("--help")
    if params.get("version", False):
        cargs.append("--version")
    if params.get("echo", False):
        cargs.append("--echo")
    if params.get("debug", False):
        cargs.append("--debug")
    return cargs


def make_average_subject_outputs(
    params: MakeAverageSubjectParameters,
    execution: Execution,
) -> MakeAverageSubjectOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MakeAverageSubjectOutputs(
        root=execution.output_file("."),
    )
    return ret


def make_average_subject_execute(
    params: MakeAverageSubjectParameters,
    runner: Runner | None = None,
) -> MakeAverageSubjectOutputs:
    """
    make_average_subject
    
    Creates an average subject by averaging surfaces, curvatures, and volumes
    from a set of subjects.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MakeAverageSubjectOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MAKE_AVERAGE_SUBJECT_METADATA)
    params = execution.params(params)
    cargs = make_average_subject_cargs(params, execution)
    ret = make_average_subject_outputs(params, execution)
    execution.run(cargs)
    return ret


def make_average_subject(
    subjects: list[str],
    average_subject_name: str,
    fsgd_file: InputPathType | None = None,
    subject_list_file: InputPathType | None = None,
    sd_out: str | None = None,
    no_link: bool = False,
    sdir: str | None = None,
    ico_order: float | None = None,
    transform_file: InputPathType | None = None,
    surface_registration: str | None = None,
    no_surfaces: bool = False,
    no_volumes: bool = False,
    force: bool = False,
    keep_all_orig: bool = False,
    no_symlink: bool = False,
    no_ribbon: bool = False,
    no_surf2surf: bool = False,
    rca_threads: float | None = None,
    help_: bool = False,
    version: bool = False,
    echo: bool = False,
    debug: bool = False,
    runner: Runner | None = None,
) -> MakeAverageSubjectOutputs:
    """
    make_average_subject
    
    Creates an average subject by averaging surfaces, curvatures, and volumes
    from a set of subjects.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subjects: List of subject names.
        average_subject_name: Name of the average subject.
        fsgd_file: Get subject list from a FreeSurfer Group Descriptor file.
        subject_list_file: Text file containing all subject names.
        sd_out: Directory to put output under instead of SUBJECTS_DIR.
        no_link: Do not link back to the original SUBJECTS_DIR with --sd-out.
        sdir: Use an alternative SUBJECTS_DIR instead of the default one in the\
            environment.
        ico_order: Change order of icosahedron.
        transform_file: Filename of transform file.
        surface_registration: Alternative registration surface name.
        no_surfaces: Do not make average surfaces.
        no_volumes: Do not make average volumes.
        force: Overwrite existing average subject data.
        keep_all_orig: Concatenate all original volumes into mri/orig.all.mgz.
        no_symlink: Do not use symbolic links with surfaces, copy files instead.
        no_ribbon: Do not create ribbon.mgz and aparc+aseg.mgz files.
        no_surf2surf: Use old parametric surface mapping method.
        rca_threads: Number of threads to pass to recon-all.
        help_: Show short descriptive help.
        version: Show script version info.
        echo: Enable command echo for debugging.
        debug: Enable debug mode, same as --echo.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MakeAverageSubjectOutputs`).
    """
    params = make_average_subject_params(
        subjects=subjects,
        fsgd_file=fsgd_file,
        subject_list_file=subject_list_file,
        average_subject_name=average_subject_name,
        sd_out=sd_out,
        no_link=no_link,
        sdir=sdir,
        ico_order=ico_order,
        transform_file=transform_file,
        surface_registration=surface_registration,
        no_surfaces=no_surfaces,
        no_volumes=no_volumes,
        force=force,
        keep_all_orig=keep_all_orig,
        no_symlink=no_symlink,
        no_ribbon=no_ribbon,
        no_surf2surf=no_surf2surf,
        rca_threads=rca_threads,
        help_=help_,
        version=version,
        echo=echo,
        debug=debug,
    )
    return make_average_subject_execute(params, runner)


__all__ = [
    "MAKE_AVERAGE_SUBJECT_METADATA",
    "MakeAverageSubjectOutputs",
    "make_average_subject",
    "make_average_subject_execute",
    "make_average_subject_params",
]
