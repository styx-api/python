# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_ALIGN_LONG_CSH_METADATA = Metadata(
    id="4bae878c31921dc1bc5894fe96ef08d84e6b8aff.boutiques",
    name="mri_align_long.csh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriAlignLongCshParameters = typing.TypedDict('MriAlignLongCshParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_align_long.csh"]],
    "base_id": str,
})
MriAlignLongCshParametersTagged = typing.TypedDict('MriAlignLongCshParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_align_long.csh"],
    "base_id": str,
})


class MriAlignLongCshOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriAlignLongCshParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    aligned_norm: OutputPathType
    """Aligned norm volume in base space"""
    aligned_aseg: OutputPathType
    """Aligned aseg volume in base space"""


def mri_align_long_csh_params(
    base_id: str,
) -> MriAlignLongCshParametersTagged:
    """
    Build parameters.
    
    Args:
        base_id: Identifier for the base subject.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_align_long.csh",
        "base_id": base_id,
    }
    return params


def mri_align_long_csh_cargs(
    params: MriAlignLongCshParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_align_long.csh")
    cargs.append(params.get("base_id", None))
    return cargs


def mri_align_long_csh_outputs(
    params: MriAlignLongCshParameters,
    execution: Execution,
) -> MriAlignLongCshOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriAlignLongCshOutputs(
        root=execution.output_file("."),
        aligned_norm=execution.output_file("[base_id].long.base/mri/norm-base.mgz"),
        aligned_aseg=execution.output_file("[base_id].long.base/mri/aseg.base.mgz"),
    )
    return ret


def mri_align_long_csh_execute(
    params: MriAlignLongCshParameters,
    runner: Runner | None = None,
) -> MriAlignLongCshOutputs:
    """
    mri_align_long.csh
    
    Aligns all longitudinal norm and aseg files to the base space in FreeSurfer
    processing.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriAlignLongCshOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_ALIGN_LONG_CSH_METADATA)
    params = execution.params(params)
    cargs = mri_align_long_csh_cargs(params, execution)
    ret = mri_align_long_csh_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_align_long_csh(
    base_id: str,
    runner: Runner | None = None,
) -> MriAlignLongCshOutputs:
    """
    mri_align_long.csh
    
    Aligns all longitudinal norm and aseg files to the base space in FreeSurfer
    processing.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        base_id: Identifier for the base subject.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriAlignLongCshOutputs`).
    """
    params = mri_align_long_csh_params(
        base_id=base_id,
    )
    return mri_align_long_csh_execute(params, runner)


__all__ = [
    "MRI_ALIGN_LONG_CSH_METADATA",
    "MriAlignLongCshOutputs",
    "mri_align_long_csh",
    "mri_align_long_csh_execute",
    "mri_align_long_csh_params",
]
