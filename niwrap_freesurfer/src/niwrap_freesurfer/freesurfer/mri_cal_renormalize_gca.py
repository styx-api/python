# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_CAL_RENORMALIZE_GCA_METADATA = Metadata(
    id="3427802787eacffbf4678b2765d22730cfcc5c16.boutiques",
    name="mri_cal_renormalize_gca",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriCalRenormalizeGcaParameters = typing.TypedDict('MriCalRenormalizeGcaParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_cal_renormalize_gca"]],
    "timepoint_file": InputPathType,
    "in_vol": InputPathType,
    "input_atlas": InputPathType,
    "transform_file": InputPathType,
    "output_atlas": str,
})
MriCalRenormalizeGcaParametersTagged = typing.TypedDict('MriCalRenormalizeGcaParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_cal_renormalize_gca"],
    "timepoint_file": InputPathType,
    "in_vol": InputPathType,
    "input_atlas": InputPathType,
    "transform_file": InputPathType,
    "output_atlas": str,
})


class MriCalRenormalizeGcaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriCalRenormalizeGcaParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_atlas_file: OutputPathType
    """Renormalized output atlas"""


def mri_cal_renormalize_gca_params(
    timepoint_file: InputPathType,
    in_vol: InputPathType,
    input_atlas: InputPathType,
    transform_file: InputPathType,
    output_atlas: str,
) -> MriCalRenormalizeGcaParametersTagged:
    """
    Build parameters.
    
    Args:
        timepoint_file: Longitudinal time point file.
        in_vol: Input volume.
        input_atlas: Input atlas.
        transform_file: Transform file.
        output_atlas: Output atlas.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_cal_renormalize_gca",
        "timepoint_file": timepoint_file,
        "in_vol": in_vol,
        "input_atlas": input_atlas,
        "transform_file": transform_file,
        "output_atlas": output_atlas,
    }
    return params


def mri_cal_renormalize_gca_cargs(
    params: MriCalRenormalizeGcaParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_cal_renormalize_gca")
    cargs.append(execution.input_file(params.get("timepoint_file", None)))
    cargs.append(execution.input_file(params.get("in_vol", None)))
    cargs.append(execution.input_file(params.get("input_atlas", None)))
    cargs.append(execution.input_file(params.get("transform_file", None)))
    cargs.append(params.get("output_atlas", None))
    return cargs


def mri_cal_renormalize_gca_outputs(
    params: MriCalRenormalizeGcaParameters,
    execution: Execution,
) -> MriCalRenormalizeGcaOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriCalRenormalizeGcaOutputs(
        root=execution.output_file("."),
        output_atlas_file=execution.output_file(params.get("output_atlas", None)),
    )
    return ret


def mri_cal_renormalize_gca_execute(
    params: MriCalRenormalizeGcaParameters,
    runner: Runner | None = None,
) -> MriCalRenormalizeGcaOutputs:
    """
    mri_cal_renormalize_gca
    
    Tool for atlas renormalization in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCalRenormalizeGcaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_CAL_RENORMALIZE_GCA_METADATA)
    params = execution.params(params)
    cargs = mri_cal_renormalize_gca_cargs(params, execution)
    ret = mri_cal_renormalize_gca_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_cal_renormalize_gca(
    timepoint_file: InputPathType,
    in_vol: InputPathType,
    input_atlas: InputPathType,
    transform_file: InputPathType,
    output_atlas: str,
    runner: Runner | None = None,
) -> MriCalRenormalizeGcaOutputs:
    """
    mri_cal_renormalize_gca
    
    Tool for atlas renormalization in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        timepoint_file: Longitudinal time point file.
        in_vol: Input volume.
        input_atlas: Input atlas.
        transform_file: Transform file.
        output_atlas: Output atlas.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCalRenormalizeGcaOutputs`).
    """
    params = mri_cal_renormalize_gca_params(
        timepoint_file=timepoint_file,
        in_vol=in_vol,
        input_atlas=input_atlas,
        transform_file=transform_file,
        output_atlas=output_atlas,
    )
    return mri_cal_renormalize_gca_execute(params, runner)


__all__ = [
    "MRI_CAL_RENORMALIZE_GCA_METADATA",
    "MriCalRenormalizeGcaOutputs",
    "mri_cal_renormalize_gca",
    "mri_cal_renormalize_gca_execute",
    "mri_cal_renormalize_gca_params",
]
