# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_COPY_PARAMS_METADATA = Metadata(
    id="6dfca8512036b7264f42b971565bc4fd7c5253b5.boutiques",
    name="mri_copy_params",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriCopyParamsParameters = typing.TypedDict('MriCopyParamsParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_copy_params"]],
    "in_vol": InputPathType,
    "template_vol": InputPathType,
    "out_vol": str,
    "size_flag": bool,
})
MriCopyParamsParametersTagged = typing.TypedDict('MriCopyParamsParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_copy_params"],
    "in_vol": InputPathType,
    "template_vol": InputPathType,
    "out_vol": str,
    "size_flag": bool,
})


class MriCopyParamsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriCopyParamsParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_volume: OutputPathType
    """Output volume file with parameters copied."""


def mri_copy_params_params(
    in_vol: InputPathType,
    template_vol: InputPathType,
    out_vol: str,
    size_flag: bool = False,
) -> MriCopyParamsParametersTagged:
    """
    Build parameters.
    
    Args:
        in_vol: Input volume file whose parameters will be replaced.
        template_vol: Template volume file whose parameters will be copied.
        out_vol: Output volume file with replaced parameters.
        size_flag: Force copying of voxel sizes when resolutions vary.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_copy_params",
        "in_vol": in_vol,
        "template_vol": template_vol,
        "out_vol": out_vol,
        "size_flag": size_flag,
    }
    return params


def mri_copy_params_cargs(
    params: MriCopyParamsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_copy_params")
    cargs.append(execution.input_file(params.get("in_vol", None)))
    cargs.append(execution.input_file(params.get("template_vol", None)))
    cargs.append(params.get("out_vol", None))
    if params.get("size_flag", False):
        cargs.append("--size")
    return cargs


def mri_copy_params_outputs(
    params: MriCopyParamsParameters,
    execution: Execution,
) -> MriCopyParamsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriCopyParamsOutputs(
        root=execution.output_file("."),
        output_volume=execution.output_file(params.get("out_vol", None)),
    )
    return ret


def mri_copy_params_execute(
    params: MriCopyParamsParameters,
    runner: Runner | None = None,
) -> MriCopyParamsOutputs:
    """
    mri_copy_params
    
    A tool to replace the volume parameters of an input volume with those of a
    template volume.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCopyParamsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_COPY_PARAMS_METADATA)
    params = execution.params(params)
    cargs = mri_copy_params_cargs(params, execution)
    ret = mri_copy_params_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_copy_params(
    in_vol: InputPathType,
    template_vol: InputPathType,
    out_vol: str,
    size_flag: bool = False,
    runner: Runner | None = None,
) -> MriCopyParamsOutputs:
    """
    mri_copy_params
    
    A tool to replace the volume parameters of an input volume with those of a
    template volume.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        in_vol: Input volume file whose parameters will be replaced.
        template_vol: Template volume file whose parameters will be copied.
        out_vol: Output volume file with replaced parameters.
        size_flag: Force copying of voxel sizes when resolutions vary.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCopyParamsOutputs`).
    """
    params = mri_copy_params_params(
        in_vol=in_vol,
        template_vol=template_vol,
        out_vol=out_vol,
        size_flag=size_flag,
    )
    return mri_copy_params_execute(params, runner)


__all__ = [
    "MRI_COPY_PARAMS_METADATA",
    "MriCopyParamsOutputs",
    "mri_copy_params",
    "mri_copy_params_execute",
    "mri_copy_params_params",
]
