# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_FSLMAT_TO_LTA_METADATA = Metadata(
    id="652c7278bbf588b572170b8876e93b2e9013d33f.boutiques",
    name="mri_fslmat_to_lta",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriFslmatToLtaParameters = typing.TypedDict('MriFslmatToLtaParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_fslmat_to_lta"]],
    "src_vol": InputPathType,
    "target_vol": InputPathType,
    "fslmat_file": InputPathType,
    "lta_file": str,
})
MriFslmatToLtaParametersTagged = typing.TypedDict('MriFslmatToLtaParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_fslmat_to_lta"],
    "src_vol": InputPathType,
    "target_vol": InputPathType,
    "fslmat_file": InputPathType,
    "lta_file": str,
})


class MriFslmatToLtaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriFslmatToLtaParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_lta_file: OutputPathType
    """LTA transformation file created from the given source, target volumes and
    FSL matrix file"""


def mri_fslmat_to_lta_params(
    src_vol: InputPathType,
    target_vol: InputPathType,
    fslmat_file: InputPathType,
    lta_file: str,
) -> MriFslmatToLtaParametersTagged:
    """
    Build parameters.
    
    Args:
        src_vol: Source volume file.
        target_vol: Target volume file.
        fslmat_file: FSL transformation matrix file.
        lta_file: Output LTA transformation file.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_fslmat_to_lta",
        "src_vol": src_vol,
        "target_vol": target_vol,
        "fslmat_file": fslmat_file,
        "lta_file": lta_file,
    }
    return params


def mri_fslmat_to_lta_cargs(
    params: MriFslmatToLtaParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_fslmat_to_lta")
    cargs.append(execution.input_file(params.get("src_vol", None)))
    cargs.append(execution.input_file(params.get("target_vol", None)))
    cargs.append(execution.input_file(params.get("fslmat_file", None)))
    cargs.append(params.get("lta_file", None))
    return cargs


def mri_fslmat_to_lta_outputs(
    params: MriFslmatToLtaParameters,
    execution: Execution,
) -> MriFslmatToLtaOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriFslmatToLtaOutputs(
        root=execution.output_file("."),
        output_lta_file=execution.output_file(params.get("lta_file", None)),
    )
    return ret


def mri_fslmat_to_lta_execute(
    params: MriFslmatToLtaParameters,
    runner: Runner | None = None,
) -> MriFslmatToLtaOutputs:
    """
    mri_fslmat_to_lta
    
    This program creates the LTA transformation file using information from the
    src and target volumes and an FSL matrix file.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriFslmatToLtaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_FSLMAT_TO_LTA_METADATA)
    params = execution.params(params)
    cargs = mri_fslmat_to_lta_cargs(params, execution)
    ret = mri_fslmat_to_lta_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_fslmat_to_lta(
    src_vol: InputPathType,
    target_vol: InputPathType,
    fslmat_file: InputPathType,
    lta_file: str,
    runner: Runner | None = None,
) -> MriFslmatToLtaOutputs:
    """
    mri_fslmat_to_lta
    
    This program creates the LTA transformation file using information from the
    src and target volumes and an FSL matrix file.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        src_vol: Source volume file.
        target_vol: Target volume file.
        fslmat_file: FSL transformation matrix file.
        lta_file: Output LTA transformation file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriFslmatToLtaOutputs`).
    """
    params = mri_fslmat_to_lta_params(
        src_vol=src_vol,
        target_vol=target_vol,
        fslmat_file=fslmat_file,
        lta_file=lta_file,
    )
    return mri_fslmat_to_lta_execute(params, runner)


__all__ = [
    "MRI_FSLMAT_TO_LTA_METADATA",
    "MriFslmatToLtaOutputs",
    "mri_fslmat_to_lta",
    "mri_fslmat_to_lta_execute",
    "mri_fslmat_to_lta_params",
]
