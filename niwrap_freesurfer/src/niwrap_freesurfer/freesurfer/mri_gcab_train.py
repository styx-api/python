# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_GCAB_TRAIN_METADATA = Metadata(
    id="6ab5802648310f2f9fc90a566ab8717601903a85.boutiques",
    name="mri_gcab_train",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriGcabTrainParameters = typing.TypedDict('MriGcabTrainParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_gcab_train"]],
    "removed_info": typing.NotRequired[str | None],
})
MriGcabTrainParametersTagged = typing.TypedDict('MriGcabTrainParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_gcab_train"],
    "removed_info": typing.NotRequired[str | None],
})


class MriGcabTrainOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriGcabTrainParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mri_gcab_train_params(
    removed_info: str | None = None,
) -> MriGcabTrainParametersTagged:
    """
    Build parameters.
    
    Args:
        removed_info: Command has been removed from the current version of\
            FreeSurfer. For further information, please contact the support mailing\
            list.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_gcab_train",
    }
    if removed_info is not None:
        params["removed_info"] = removed_info
    return params


def mri_gcab_train_cargs(
    params: MriGcabTrainParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_gcab_train")
    if params.get("removed_info", None) is not None:
        cargs.append(params.get("removed_info", None))
    return cargs


def mri_gcab_train_outputs(
    params: MriGcabTrainParameters,
    execution: Execution,
) -> MriGcabTrainOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriGcabTrainOutputs(
        root=execution.output_file("."),
    )
    return ret


def mri_gcab_train_execute(
    params: MriGcabTrainParameters,
    runner: Runner | None = None,
) -> MriGcabTrainOutputs:
    """
    mri_gcab_train
    
    Previously used command in FreeSurfer for training with Gaussian Classifier
    Atlas-based (GCAB) modeling; has been removed in the current version.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriGcabTrainOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_GCAB_TRAIN_METADATA)
    params = execution.params(params)
    cargs = mri_gcab_train_cargs(params, execution)
    ret = mri_gcab_train_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_gcab_train(
    removed_info: str | None = None,
    runner: Runner | None = None,
) -> MriGcabTrainOutputs:
    """
    mri_gcab_train
    
    Previously used command in FreeSurfer for training with Gaussian Classifier
    Atlas-based (GCAB) modeling; has been removed in the current version.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        removed_info: Command has been removed from the current version of\
            FreeSurfer. For further information, please contact the support mailing\
            list.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriGcabTrainOutputs`).
    """
    params = mri_gcab_train_params(
        removed_info=removed_info,
    )
    return mri_gcab_train_execute(params, runner)


__all__ = [
    "MRI_GCAB_TRAIN_METADATA",
    "MriGcabTrainOutputs",
    "mri_gcab_train",
    "mri_gcab_train_execute",
    "mri_gcab_train_params",
]
