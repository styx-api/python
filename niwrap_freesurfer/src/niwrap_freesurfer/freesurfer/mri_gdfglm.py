# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_GDFGLM_METADATA = Metadata(
    id="1f66601024a6edf8664437309e6f8ea6af7c6553.boutiques",
    name="mri_gdfglm",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriGdfglmParameters = typing.TypedDict('MriGdfglmParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_gdfglm"]],
    "inputs": typing.NotRequired[str | None],
})
MriGdfglmParametersTagged = typing.TypedDict('MriGdfglmParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_gdfglm"],
    "inputs": typing.NotRequired[str | None],
})


class MriGdfglmOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriGdfglmParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    outputs: OutputPathType
    """Output information is not available because the command has been
    removed."""


def mri_gdfglm_params(
    inputs: str | None = None,
) -> MriGdfglmParametersTagged:
    """
    Build parameters.
    
    Args:
        inputs: Input parameters are not available because the command has been\
            removed.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_gdfglm",
    }
    if inputs is not None:
        params["inputs"] = inputs
    return params


def mri_gdfglm_cargs(
    params: MriGdfglmParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_gdfglm")
    if params.get("inputs", None) is not None:
        cargs.append(params.get("inputs", None))
    return cargs


def mri_gdfglm_outputs(
    params: MriGdfglmParameters,
    execution: Execution,
) -> MriGdfglmOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriGdfglmOutputs(
        root=execution.output_file("."),
        outputs=execution.output_file("[OUTPUT]"),
    )
    return ret


def mri_gdfglm_execute(
    params: MriGdfglmParameters,
    runner: Runner | None = None,
) -> MriGdfglmOutputs:
    """
    mri_gdfglm
    
    The mri_gdfglm command has been removed from the current version of
    FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriGdfglmOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_GDFGLM_METADATA)
    params = execution.params(params)
    cargs = mri_gdfglm_cargs(params, execution)
    ret = mri_gdfglm_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_gdfglm(
    inputs: str | None = None,
    runner: Runner | None = None,
) -> MriGdfglmOutputs:
    """
    mri_gdfglm
    
    The mri_gdfglm command has been removed from the current version of
    FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        inputs: Input parameters are not available because the command has been\
            removed.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriGdfglmOutputs`).
    """
    params = mri_gdfglm_params(
        inputs=inputs,
    )
    return mri_gdfglm_execute(params, runner)


__all__ = [
    "MRI_GDFGLM_METADATA",
    "MriGdfglmOutputs",
    "mri_gdfglm",
    "mri_gdfglm_execute",
    "mri_gdfglm_params",
]
