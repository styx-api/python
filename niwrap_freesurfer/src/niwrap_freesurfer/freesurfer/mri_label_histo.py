# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRI_LABEL_HISTO_METADATA = Metadata(
    id="643c58f8665ec46cd1322bb1c0c35f74ac658dc2.boutiques",
    name="mri_label_histo",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MriLabelHistoParameters = typing.TypedDict('MriLabelHistoParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mri_label_histo"]],
    "t1_volume": InputPathType,
    "labeled_volume": InputPathType,
    "label": float,
    "output": str,
})
MriLabelHistoParametersTagged = typing.TypedDict('MriLabelHistoParametersTagged', {
    "@type": typing.Literal["freesurfer/mri_label_histo"],
    "t1_volume": InputPathType,
    "labeled_volume": InputPathType,
    "label": float,
    "output": str,
})


class MriLabelHistoOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MriLabelHistoParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    histogram_output: OutputPathType
    """Histogram of voxel values for the specified label."""


def mri_label_histo_params(
    t1_volume: InputPathType,
    labeled_volume: InputPathType,
    label: float,
    output: str,
) -> MriLabelHistoParametersTagged:
    """
    Build parameters.
    
    Args:
        t1_volume: Input T1-weighted anatomical volume.
        labeled_volume: Input volume with labeled regions.
        label: Label of the region of interest.
        output: Output file for histogram.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mri_label_histo",
        "t1_volume": t1_volume,
        "labeled_volume": labeled_volume,
        "label": label,
        "output": output,
    }
    return params


def mri_label_histo_cargs(
    params: MriLabelHistoParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mri_label_histo")
    cargs.append(execution.input_file(params.get("t1_volume", None)))
    cargs.append(execution.input_file(params.get("labeled_volume", None)))
    cargs.append(str(params.get("label", None)))
    cargs.append(params.get("output", None))
    return cargs


def mri_label_histo_outputs(
    params: MriLabelHistoParameters,
    execution: Execution,
) -> MriLabelHistoOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MriLabelHistoOutputs(
        root=execution.output_file("."),
        histogram_output=execution.output_file(params.get("output", None)),
    )
    return ret


def mri_label_histo_execute(
    params: MriLabelHistoParameters,
    runner: Runner | None = None,
) -> MriLabelHistoOutputs:
    """
    mri_label_histo
    
    Tool for creating a histogram of voxel values within a specified label.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriLabelHistoOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_LABEL_HISTO_METADATA)
    params = execution.params(params)
    cargs = mri_label_histo_cargs(params, execution)
    ret = mri_label_histo_outputs(params, execution)
    execution.run(cargs)
    return ret


def mri_label_histo(
    t1_volume: InputPathType,
    labeled_volume: InputPathType,
    label: float,
    output: str,
    runner: Runner | None = None,
) -> MriLabelHistoOutputs:
    """
    mri_label_histo
    
    Tool for creating a histogram of voxel values within a specified label.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        t1_volume: Input T1-weighted anatomical volume.
        labeled_volume: Input volume with labeled regions.
        label: Label of the region of interest.
        output: Output file for histogram.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriLabelHistoOutputs`).
    """
    params = mri_label_histo_params(
        t1_volume=t1_volume,
        labeled_volume=labeled_volume,
        label=label,
        output=output,
    )
    return mri_label_histo_execute(params, runner)


__all__ = [
    "MRI_LABEL_HISTO_METADATA",
    "MriLabelHistoOutputs",
    "mri_label_histo",
    "mri_label_histo_execute",
    "mri_label_histo_params",
]
