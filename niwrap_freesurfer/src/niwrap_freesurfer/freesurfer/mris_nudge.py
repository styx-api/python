# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_NUDGE_METADATA = Metadata(
    id="248273cfa5785567fee638e109250d6fc7e73335.boutiques",
    name="mris_nudge",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisNudgeParameters = typing.TypedDict('MrisNudgeParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_nudge"]],
    "input_surface": InputPathType,
    "input_volume": InputPathType,
    "vertex": int,
    "target_val": float,
    "nbhd": int,
})
MrisNudgeParametersTagged = typing.TypedDict('MrisNudgeParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_nudge"],
    "input_surface": InputPathType,
    "input_volume": InputPathType,
    "vertex": int,
    "target_val": float,
    "nbhd": int,
})


class MrisNudgeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisNudgeParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_surface: OutputPathType
    """Output surface file after nudging"""


def mris_nudge_params(
    input_surface: InputPathType,
    input_volume: InputPathType,
    vertex: int,
    target_val: float,
    nbhd: int,
) -> MrisNudgeParametersTagged:
    """
    Build parameters.
    
    Args:
        input_surface: Input surface file for nudging.
        input_volume: Input volume file.
        vertex: Vertex to nudge.
        target_val: Target value for nudging.
        nbhd: Neighborhood size for nudge operation.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_nudge",
        "input_surface": input_surface,
        "input_volume": input_volume,
        "vertex": vertex,
        "target_val": target_val,
        "nbhd": nbhd,
    }
    return params


def mris_nudge_cargs(
    params: MrisNudgeParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_nudge")
    cargs.append(execution.input_file(params.get("input_surface", None)))
    cargs.append(execution.input_file(params.get("input_volume", None)))
    cargs.append(str(params.get("vertex", None)))
    cargs.append(str(params.get("target_val", None)))
    cargs.append(str(params.get("nbhd", None)))
    return cargs


def mris_nudge_outputs(
    params: MrisNudgeParameters,
    execution: Execution,
) -> MrisNudgeOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisNudgeOutputs(
        root=execution.output_file("."),
        output_surface=execution.output_file("[OUTPUT_SURF]"),
    )
    return ret


def mris_nudge_execute(
    params: MrisNudgeParameters,
    runner: Runner | None = None,
) -> MrisNudgeOutputs:
    """
    mris_nudge
    
    A tool to nudge vertex positions on a surface using a volume.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisNudgeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_NUDGE_METADATA)
    params = execution.params(params)
    cargs = mris_nudge_cargs(params, execution)
    ret = mris_nudge_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_nudge(
    input_surface: InputPathType,
    input_volume: InputPathType,
    vertex: int,
    target_val: float,
    nbhd: int,
    runner: Runner | None = None,
) -> MrisNudgeOutputs:
    """
    mris_nudge
    
    A tool to nudge vertex positions on a surface using a volume.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_surface: Input surface file for nudging.
        input_volume: Input volume file.
        vertex: Vertex to nudge.
        target_val: Target value for nudging.
        nbhd: Neighborhood size for nudge operation.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisNudgeOutputs`).
    """
    params = mris_nudge_params(
        input_surface=input_surface,
        input_volume=input_volume,
        vertex=vertex,
        target_val=target_val,
        nbhd=nbhd,
    )
    return mris_nudge_execute(params, runner)


__all__ = [
    "MRIS_NUDGE_METADATA",
    "MrisNudgeOutputs",
    "mris_nudge",
    "mris_nudge_execute",
    "mris_nudge_params",
]
