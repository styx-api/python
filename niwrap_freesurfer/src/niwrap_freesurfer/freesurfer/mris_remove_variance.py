# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_REMOVE_VARIANCE_METADATA = Metadata(
    id="a233d0c60ef8e39a89e40a91dfdf170763167129.boutiques",
    name="mris_remove_variance",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisRemoveVarianceParameters = typing.TypedDict('MrisRemoveVarianceParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_remove_variance"]],
    "input_surface_file": InputPathType,
    "curvature_file": InputPathType,
    "curvature_file_to_remove": InputPathType,
    "output_curvature_file": str,
})
MrisRemoveVarianceParametersTagged = typing.TypedDict('MrisRemoveVarianceParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_remove_variance"],
    "input_surface_file": InputPathType,
    "curvature_file": InputPathType,
    "curvature_file_to_remove": InputPathType,
    "output_curvature_file": str,
})


class MrisRemoveVarianceOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisRemoveVarianceParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    resulting_curvature_file: OutputPathType
    """The resulting curvature file after removing variance."""


def mris_remove_variance_params(
    input_surface_file: InputPathType,
    curvature_file: InputPathType,
    curvature_file_to_remove: InputPathType,
    output_curvature_file: str,
) -> MrisRemoveVarianceParametersTagged:
    """
    Build parameters.
    
    Args:
        input_surface_file: The input surface file.
        curvature_file: The curvature file.
        curvature_file_to_remove: The curvature file to remove from the input\
            curvature.
        output_curvature_file: The output curvature file.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_remove_variance",
        "input_surface_file": input_surface_file,
        "curvature_file": curvature_file,
        "curvature_file_to_remove": curvature_file_to_remove,
        "output_curvature_file": output_curvature_file,
    }
    return params


def mris_remove_variance_cargs(
    params: MrisRemoveVarianceParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_remove_variance")
    cargs.append(execution.input_file(params.get("input_surface_file", None)))
    cargs.append(execution.input_file(params.get("curvature_file", None)))
    cargs.append(execution.input_file(params.get("curvature_file_to_remove", None)))
    cargs.append(params.get("output_curvature_file", None))
    return cargs


def mris_remove_variance_outputs(
    params: MrisRemoveVarianceParameters,
    execution: Execution,
) -> MrisRemoveVarianceOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisRemoveVarianceOutputs(
        root=execution.output_file("."),
        resulting_curvature_file=execution.output_file(params.get("output_curvature_file", None)),
    )
    return ret


def mris_remove_variance_execute(
    params: MrisRemoveVarianceParameters,
    runner: Runner | None = None,
) -> MrisRemoveVarianceOutputs:
    """
    mris_remove_variance
    
    This program removes the linear component of the variance accounted for by
    one curvature vector from another.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisRemoveVarianceOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_REMOVE_VARIANCE_METADATA)
    params = execution.params(params)
    cargs = mris_remove_variance_cargs(params, execution)
    ret = mris_remove_variance_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_remove_variance(
    input_surface_file: InputPathType,
    curvature_file: InputPathType,
    curvature_file_to_remove: InputPathType,
    output_curvature_file: str,
    runner: Runner | None = None,
) -> MrisRemoveVarianceOutputs:
    """
    mris_remove_variance
    
    This program removes the linear component of the variance accounted for by
    one curvature vector from another.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_surface_file: The input surface file.
        curvature_file: The curvature file.
        curvature_file_to_remove: The curvature file to remove from the input\
            curvature.
        output_curvature_file: The output curvature file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisRemoveVarianceOutputs`).
    """
    params = mris_remove_variance_params(
        input_surface_file=input_surface_file,
        curvature_file=curvature_file,
        curvature_file_to_remove=curvature_file_to_remove,
        output_curvature_file=output_curvature_file,
    )
    return mris_remove_variance_execute(params, runner)


__all__ = [
    "MRIS_REMOVE_VARIANCE_METADATA",
    "MrisRemoveVarianceOutputs",
    "mris_remove_variance",
    "mris_remove_variance_execute",
    "mris_remove_variance_params",
]
