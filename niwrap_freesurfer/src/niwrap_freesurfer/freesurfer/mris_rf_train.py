# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_RF_TRAIN_METADATA = Metadata(
    id="bf5f4317681a309ec278b22f75586f1d97e41b50.boutiques",
    name="mris_rf_train",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisRfTrainParameters = typing.TypedDict('MrisRfTrainParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_rf_train"]],
    "subjects": list[str],
    "output_name": str,
    "hemi": typing.NotRequired[str | None],
    "surf": typing.NotRequired[str | None],
})
MrisRfTrainParametersTagged = typing.TypedDict('MrisRfTrainParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_rf_train"],
    "subjects": list[str],
    "output_name": str,
    "hemi": typing.NotRequired[str | None],
    "surf": typing.NotRequired[str | None],
})


class MrisRfTrainOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisRfTrainParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_rf_train_params(
    subjects: list[str],
    output_name: str,
    hemi: str | None = None,
    surf: str | None = None,
) -> MrisRfTrainParametersTagged:
    """
    Build parameters.
    
    Args:
        subjects: List of subjects to process.
        output_name: Output name for the trained model.
        hemi: Process specified hemisphere instead of the default 'lh'.
        surf: Change the default surface name from 'white' to the specified\
            surface.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_rf_train",
        "subjects": subjects,
        "output_name": output_name,
    }
    if hemi is not None:
        params["hemi"] = hemi
    if surf is not None:
        params["surf"] = surf
    return params


def mris_rf_train_cargs(
    params: MrisRfTrainParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_rf_train")
    cargs.extend(params.get("subjects", None))
    cargs.append(params.get("output_name", None))
    if params.get("hemi", None) is not None:
        cargs.extend([
            "--hemi",
            params.get("hemi", None)
        ])
    if params.get("surf", None) is not None:
        cargs.extend([
            "--surf",
            params.get("surf", None)
        ])
    return cargs


def mris_rf_train_outputs(
    params: MrisRfTrainParameters,
    execution: Execution,
) -> MrisRfTrainOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisRfTrainOutputs(
        root=execution.output_file("."),
    )
    return ret


def mris_rf_train_execute(
    params: MrisRfTrainParameters,
    runner: Runner | None = None,
) -> MrisRfTrainOutputs:
    """
    mris_rf_train
    
    Tool for training a random forest classifier using MRIS surface data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisRfTrainOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_RF_TRAIN_METADATA)
    params = execution.params(params)
    cargs = mris_rf_train_cargs(params, execution)
    ret = mris_rf_train_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_rf_train(
    subjects: list[str],
    output_name: str,
    hemi: str | None = None,
    surf: str | None = None,
    runner: Runner | None = None,
) -> MrisRfTrainOutputs:
    """
    mris_rf_train
    
    Tool for training a random forest classifier using MRIS surface data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subjects: List of subjects to process.
        output_name: Output name for the trained model.
        hemi: Process specified hemisphere instead of the default 'lh'.
        surf: Change the default surface name from 'white' to the specified\
            surface.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisRfTrainOutputs`).
    """
    params = mris_rf_train_params(
        subjects=subjects,
        output_name=output_name,
        hemi=hemi,
        surf=surf,
    )
    return mris_rf_train_execute(params, runner)


__all__ = [
    "MRIS_RF_TRAIN_METADATA",
    "MrisRfTrainOutputs",
    "mris_rf_train",
    "mris_rf_train_execute",
    "mris_rf_train_params",
]
