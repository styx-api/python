# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_SEGMENTATION_STATS_METADATA = Metadata(
    id="de9849720af633844121d12399c9858bc49fd276.boutiques",
    name="mris_segmentation_stats",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisSegmentationStatsParameters = typing.TypedDict('MrisSegmentationStatsParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_segmentation_stats"]],
    "overlay_name": str,
    "segmentation_label_name": str,
    "subjects": list[str],
    "roc_file": str,
})
MrisSegmentationStatsParametersTagged = typing.TypedDict('MrisSegmentationStatsParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_segmentation_stats"],
    "overlay_name": str,
    "segmentation_label_name": str,
    "subjects": list[str],
    "roc_file": str,
})


class MrisSegmentationStatsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisSegmentationStatsParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    roc_output_file: OutputPathType
    """ROC curve file"""


def mris_segmentation_stats_params(
    overlay_name: str,
    segmentation_label_name: str,
    subjects: list[str],
    roc_file: str,
) -> MrisSegmentationStatsParametersTagged:
    """
    Build parameters.
    
    Args:
        overlay_name: Overlay name for segmentation.
        segmentation_label_name: Segmentation label name.
        subjects: List of subjects to process.
        roc_file: File for ROC curve output.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_segmentation_stats",
        "overlay_name": overlay_name,
        "segmentation_label_name": segmentation_label_name,
        "subjects": subjects,
        "roc_file": roc_file,
    }
    return params


def mris_segmentation_stats_cargs(
    params: MrisSegmentationStatsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_segmentation_stats")
    cargs.append(params.get("overlay_name", None))
    cargs.append(params.get("segmentation_label_name", None))
    cargs.extend(params.get("subjects", None))
    cargs.append(params.get("roc_file", None))
    return cargs


def mris_segmentation_stats_outputs(
    params: MrisSegmentationStatsParameters,
    execution: Execution,
) -> MrisSegmentationStatsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisSegmentationStatsOutputs(
        root=execution.output_file("."),
        roc_output_file=execution.output_file(params.get("roc_file", None)),
    )
    return ret


def mris_segmentation_stats_execute(
    params: MrisSegmentationStatsParameters,
    runner: Runner | None = None,
) -> MrisSegmentationStatsOutputs:
    """
    mris_segmentation_stats
    
    Tool for calculating segmentation statistics.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisSegmentationStatsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_SEGMENTATION_STATS_METADATA)
    params = execution.params(params)
    cargs = mris_segmentation_stats_cargs(params, execution)
    ret = mris_segmentation_stats_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_segmentation_stats(
    overlay_name: str,
    segmentation_label_name: str,
    subjects: list[str],
    roc_file: str,
    runner: Runner | None = None,
) -> MrisSegmentationStatsOutputs:
    """
    mris_segmentation_stats
    
    Tool for calculating segmentation statistics.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        overlay_name: Overlay name for segmentation.
        segmentation_label_name: Segmentation label name.
        subjects: List of subjects to process.
        roc_file: File for ROC curve output.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisSegmentationStatsOutputs`).
    """
    params = mris_segmentation_stats_params(
        overlay_name=overlay_name,
        segmentation_label_name=segmentation_label_name,
        subjects=subjects,
        roc_file=roc_file,
    )
    return mris_segmentation_stats_execute(params, runner)


__all__ = [
    "MRIS_SEGMENTATION_STATS_METADATA",
    "MrisSegmentationStatsOutputs",
    "mris_segmentation_stats",
    "mris_segmentation_stats_execute",
    "mris_segmentation_stats_params",
]
