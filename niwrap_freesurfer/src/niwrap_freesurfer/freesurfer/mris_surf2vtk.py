# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_SURF2VTK_METADATA = Metadata(
    id="f5871efb4fe7c8319d01e2ffecab50e8cd8d5b55.boutiques",
    name="mris_surf2vtk",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisSurf2vtkParameters = typing.TypedDict('MrisSurf2vtkParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_surf2vtk"]],
    "input_surface": InputPathType,
    "output_surface": str,
})
MrisSurf2vtkParametersTagged = typing.TypedDict('MrisSurf2vtkParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_surf2vtk"],
    "input_surface": InputPathType,
    "output_surface": str,
})


class MrisSurf2vtkOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisSurf2vtkParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    vtk_surface: OutputPathType
    """Output surface file converted to VTK format"""


def mris_surf2vtk_params(
    input_surface: InputPathType,
    output_surface: str,
) -> MrisSurf2vtkParametersTagged:
    """
    Build parameters.
    
    Args:
        input_surface: Input surface file.
        output_surface: Output surface file in VTK format.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_surf2vtk",
        "input_surface": input_surface,
        "output_surface": output_surface,
    }
    return params


def mris_surf2vtk_cargs(
    params: MrisSurf2vtkParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_surf2vtk")
    cargs.extend([
        "-i",
        execution.input_file(params.get("input_surface", None))
    ])
    cargs.extend([
        "-o",
        params.get("output_surface", None)
    ])
    return cargs


def mris_surf2vtk_outputs(
    params: MrisSurf2vtkParameters,
    execution: Execution,
) -> MrisSurf2vtkOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisSurf2vtkOutputs(
        root=execution.output_file("."),
        vtk_surface=execution.output_file(params.get("output_surface", None)),
    )
    return ret


def mris_surf2vtk_execute(
    params: MrisSurf2vtkParameters,
    runner: Runner | None = None,
) -> MrisSurf2vtkOutputs:
    """
    mris_surf2vtk
    
    Conversion tool to convert surface files to VTK format.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisSurf2vtkOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_SURF2VTK_METADATA)
    params = execution.params(params)
    cargs = mris_surf2vtk_cargs(params, execution)
    ret = mris_surf2vtk_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_surf2vtk(
    input_surface: InputPathType,
    output_surface: str,
    runner: Runner | None = None,
) -> MrisSurf2vtkOutputs:
    """
    mris_surf2vtk
    
    Conversion tool to convert surface files to VTK format.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_surface: Input surface file.
        output_surface: Output surface file in VTK format.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisSurf2vtkOutputs`).
    """
    params = mris_surf2vtk_params(
        input_surface=input_surface,
        output_surface=output_surface,
    )
    return mris_surf2vtk_execute(params, runner)


__all__ = [
    "MRIS_SURF2VTK_METADATA",
    "MrisSurf2vtkOutputs",
    "mris_surf2vtk",
    "mris_surf2vtk_execute",
    "mris_surf2vtk_params",
]
