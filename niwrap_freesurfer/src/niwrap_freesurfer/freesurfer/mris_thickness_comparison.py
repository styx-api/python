# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_THICKNESS_COMPARISON_METADATA = Metadata(
    id="9a9492d13f619bbb85ad0c50c62520e3b045a025.boutiques",
    name="mris_thickness_comparison",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisThicknessComparisonParameters = typing.TypedDict('MrisThicknessComparisonParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/mris_thickness_comparison"]],
    "subject": str,
    "hemi": str,
    "thickness_file": InputPathType,
    "w_file": InputPathType,
    "labels": list[str],
})
MrisThicknessComparisonParametersTagged = typing.TypedDict('MrisThicknessComparisonParametersTagged', {
    "@type": typing.Literal["freesurfer/mris_thickness_comparison"],
    "subject": str,
    "hemi": str,
    "thickness_file": InputPathType,
    "w_file": InputPathType,
    "labels": list[str],
})


class MrisThicknessComparisonOutputs(typing.NamedTuple):
    """
    Output object returned when calling `MrisThicknessComparisonParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_thickness_comparison_params(
    subject: str,
    hemi: str,
    thickness_file: InputPathType,
    w_file: InputPathType,
    labels: list[str],
) -> MrisThicknessComparisonParametersTagged:
    """
    Build parameters.
    
    Args:
        subject: Subject identifier.
        hemi: Hemisphere (e.g., lh or rh).
        thickness_file: File containing thickness measurements.
        w_file: W file for cortical thickness comparison.
        labels: List of labels to compare, separated by spaces.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/mris_thickness_comparison",
        "subject": subject,
        "hemi": hemi,
        "thickness_file": thickness_file,
        "w_file": w_file,
        "labels": labels,
    }
    return params


def mris_thickness_comparison_cargs(
    params: MrisThicknessComparisonParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_thickness_comparison")
    cargs.append(params.get("subject", None))
    cargs.append(params.get("hemi", None))
    cargs.append(execution.input_file(params.get("thickness_file", None)))
    cargs.append(execution.input_file(params.get("w_file", None)))
    cargs.extend(params.get("labels", None))
    return cargs


def mris_thickness_comparison_outputs(
    params: MrisThicknessComparisonParameters,
    execution: Execution,
) -> MrisThicknessComparisonOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisThicknessComparisonOutputs(
        root=execution.output_file("."),
    )
    return ret


def mris_thickness_comparison_execute(
    params: MrisThicknessComparisonParameters,
    runner: Runner | None = None,
) -> MrisThicknessComparisonOutputs:
    """
    mris_thickness_comparison
    
    Tool to compare cortical thickness measurements between two or more
    specified labels.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisThicknessComparisonOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_THICKNESS_COMPARISON_METADATA)
    params = execution.params(params)
    cargs = mris_thickness_comparison_cargs(params, execution)
    ret = mris_thickness_comparison_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_thickness_comparison(
    subject: str,
    hemi: str,
    thickness_file: InputPathType,
    w_file: InputPathType,
    labels: list[str],
    runner: Runner | None = None,
) -> MrisThicknessComparisonOutputs:
    """
    mris_thickness_comparison
    
    Tool to compare cortical thickness measurements between two or more
    specified labels.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject: Subject identifier.
        hemi: Hemisphere (e.g., lh or rh).
        thickness_file: File containing thickness measurements.
        w_file: W file for cortical thickness comparison.
        labels: List of labels to compare, separated by spaces.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisThicknessComparisonOutputs`).
    """
    params = mris_thickness_comparison_params(
        subject=subject,
        hemi=hemi,
        thickness_file=thickness_file,
        w_file=w_file,
        labels=labels,
    )
    return mris_thickness_comparison_execute(params, runner)


__all__ = [
    "MRIS_THICKNESS_COMPARISON_METADATA",
    "MrisThicknessComparisonOutputs",
    "mris_thickness_comparison",
    "mris_thickness_comparison_execute",
    "mris_thickness_comparison_params",
]
