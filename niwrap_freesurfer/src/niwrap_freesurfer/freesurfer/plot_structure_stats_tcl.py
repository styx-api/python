# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

PLOT_STRUCTURE_STATS_TCL_METADATA = Metadata(
    id="60fce4021e28a4ededdb51863b8fa98cde23f6df.boutiques",
    name="plot_structure_stats.tcl",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


PlotStructureStatsTclParameters = typing.TypedDict('PlotStructureStatsTclParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/plot_structure_stats.tcl"]],
    "input_file": InputPathType,
    "output_file": str,
})
PlotStructureStatsTclParametersTagged = typing.TypedDict('PlotStructureStatsTclParametersTagged', {
    "@type": typing.Literal["freesurfer/plot_structure_stats.tcl"],
    "input_file": InputPathType,
    "output_file": str,
})


class PlotStructureStatsTclOutputs(typing.NamedTuple):
    """
    Output object returned when calling `PlotStructureStatsTclParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    plot_file: OutputPathType
    """Generated plot"""


def plot_structure_stats_tcl_params(
    input_file: InputPathType,
    output_file: str,
) -> PlotStructureStatsTclParametersTagged:
    """
    Build parameters.
    
    Args:
        input_file: Input stats file.
        output_file: Output plot file.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/plot_structure_stats.tcl",
        "input_file": input_file,
        "output_file": output_file,
    }
    return params


def plot_structure_stats_tcl_cargs(
    params: PlotStructureStatsTclParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("plot_structure_stats.tcl")
    cargs.append(execution.input_file(params.get("input_file", None)))
    cargs.append(params.get("output_file", None))
    return cargs


def plot_structure_stats_tcl_outputs(
    params: PlotStructureStatsTclParameters,
    execution: Execution,
) -> PlotStructureStatsTclOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = PlotStructureStatsTclOutputs(
        root=execution.output_file("."),
        plot_file=execution.output_file(params.get("output_file", None) + ".png"),
    )
    return ret


def plot_structure_stats_tcl_execute(
    params: PlotStructureStatsTclParameters,
    runner: Runner | None = None,
) -> PlotStructureStatsTclOutputs:
    """
    plot_structure_stats.tcl
    
    Script to plot structural statistics.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PlotStructureStatsTclOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PLOT_STRUCTURE_STATS_TCL_METADATA)
    params = execution.params(params)
    cargs = plot_structure_stats_tcl_cargs(params, execution)
    ret = plot_structure_stats_tcl_outputs(params, execution)
    execution.run(cargs)
    return ret


def plot_structure_stats_tcl(
    input_file: InputPathType,
    output_file: str,
    runner: Runner | None = None,
) -> PlotStructureStatsTclOutputs:
    """
    plot_structure_stats.tcl
    
    Script to plot structural statistics.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_file: Input stats file.
        output_file: Output plot file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PlotStructureStatsTclOutputs`).
    """
    params = plot_structure_stats_tcl_params(
        input_file=input_file,
        output_file=output_file,
    )
    return plot_structure_stats_tcl_execute(params, runner)


__all__ = [
    "PLOT_STRUCTURE_STATS_TCL_METADATA",
    "PlotStructureStatsTclOutputs",
    "plot_structure_stats_tcl",
    "plot_structure_stats_tcl_execute",
    "plot_structure_stats_tcl_params",
]
