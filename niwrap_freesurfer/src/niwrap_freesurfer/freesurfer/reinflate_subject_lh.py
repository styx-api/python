# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

REINFLATE_SUBJECT_LH_METADATA = Metadata(
    id="b44f8e0b6c91f3d76057be20617633b088a74caa.boutiques",
    name="reinflate_subject-lh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


ReinflateSubjectLhParameters = typing.TypedDict('ReinflateSubjectLhParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/reinflate_subject-lh"]],
    "subject_id": str,
})
ReinflateSubjectLhParametersTagged = typing.TypedDict('ReinflateSubjectLhParametersTagged', {
    "@type": typing.Literal["freesurfer/reinflate_subject-lh"],
    "subject_id": str,
})


class ReinflateSubjectLhOutputs(typing.NamedTuple):
    """
    Output object returned when calling `ReinflateSubjectLhParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    inflated_surface: OutputPathType
    """Reinflated left hemisphere cortical surface"""


def reinflate_subject_lh_params(
    subject_id: str,
) -> ReinflateSubjectLhParametersTagged:
    """
    Build parameters.
    
    Args:
        subject_id: Subject identifier.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/reinflate_subject-lh",
        "subject_id": subject_id,
    }
    return params


def reinflate_subject_lh_cargs(
    params: ReinflateSubjectLhParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("reinflate_subject-lh")
    cargs.extend([
        "-lh",
        params.get("subject_id", None)
    ])
    return cargs


def reinflate_subject_lh_outputs(
    params: ReinflateSubjectLhParameters,
    execution: Execution,
) -> ReinflateSubjectLhOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = ReinflateSubjectLhOutputs(
        root=execution.output_file("."),
        inflated_surface=execution.output_file(params.get("subject_id", None) + "/surf/lh.inflated"),
    )
    return ret


def reinflate_subject_lh_execute(
    params: ReinflateSubjectLhParameters,
    runner: Runner | None = None,
) -> ReinflateSubjectLhOutputs:
    """
    reinflate_subject-lh
    
    Utility to reinflate cortical surfaces for left hemisphere in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ReinflateSubjectLhOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(REINFLATE_SUBJECT_LH_METADATA)
    params = execution.params(params)
    cargs = reinflate_subject_lh_cargs(params, execution)
    ret = reinflate_subject_lh_outputs(params, execution)
    execution.run(cargs)
    return ret


def reinflate_subject_lh(
    subject_id: str,
    runner: Runner | None = None,
) -> ReinflateSubjectLhOutputs:
    """
    reinflate_subject-lh
    
    Utility to reinflate cortical surfaces for left hemisphere in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_id: Subject identifier.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ReinflateSubjectLhOutputs`).
    """
    params = reinflate_subject_lh_params(
        subject_id=subject_id,
    )
    return reinflate_subject_lh_execute(params, runner)


__all__ = [
    "REINFLATE_SUBJECT_LH_METADATA",
    "ReinflateSubjectLhOutputs",
    "reinflate_subject_lh",
    "reinflate_subject_lh_execute",
    "reinflate_subject_lh_params",
]
