# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

RUN_SEGMENT_SUBJECT_SH_METADATA = Metadata(
    id="deb475696935c383441105407e65cfcf8a1742bd.boutiques",
    name="run_SegmentSubject.sh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


RunSegmentSubjectShParameters = typing.TypedDict('RunSegmentSubjectShParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/run_SegmentSubject.sh"]],
    "deployedMCRroot": str,
    "arguments": typing.NotRequired[str | None],
})
RunSegmentSubjectShParametersTagged = typing.TypedDict('RunSegmentSubjectShParametersTagged', {
    "@type": typing.Literal["freesurfer/run_SegmentSubject.sh"],
    "deployedMCRroot": str,
    "arguments": typing.NotRequired[str | None],
})


class RunSegmentSubjectShOutputs(typing.NamedTuple):
    """
    Output object returned when calling `RunSegmentSubjectShParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output: OutputPathType
    """The generated output file from the segmentation process."""


def run_segment_subject_sh_params(
    deployed_mcrroot: str,
    arguments: str | None = None,
) -> RunSegmentSubjectShParametersTagged:
    """
    Build parameters.
    
    Args:
        deployed_mcrroot: The root directory of the deployed MATLAB Compiler\
            Runtime.
        arguments: Additional arguments to be passed to the SegmentSubject\
            script.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/run_SegmentSubject.sh",
        "deployedMCRroot": deployed_mcrroot,
    }
    if arguments is not None:
        params["arguments"] = arguments
    return params


def run_segment_subject_sh_cargs(
    params: RunSegmentSubjectShParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("run_SegmentSubject.sh")
    cargs.append(params.get("deployedMCRroot", None))
    if params.get("arguments", None) is not None:
        cargs.append(params.get("arguments", None))
    return cargs


def run_segment_subject_sh_outputs(
    params: RunSegmentSubjectShParameters,
    execution: Execution,
) -> RunSegmentSubjectShOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = RunSegmentSubjectShOutputs(
        root=execution.output_file("."),
        output=execution.output_file("outputFileName"),
    )
    return ret


def run_segment_subject_sh_execute(
    params: RunSegmentSubjectShParameters,
    runner: Runner | None = None,
) -> RunSegmentSubjectShOutputs:
    """
    run_SegmentSubject.sh
    
    A command-line tool for subject segmentation in Freesurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RunSegmentSubjectShOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(RUN_SEGMENT_SUBJECT_SH_METADATA)
    params = execution.params(params)
    cargs = run_segment_subject_sh_cargs(params, execution)
    ret = run_segment_subject_sh_outputs(params, execution)
    execution.run(cargs)
    return ret


def run_segment_subject_sh(
    deployed_mcrroot: str,
    arguments: str | None = None,
    runner: Runner | None = None,
) -> RunSegmentSubjectShOutputs:
    """
    run_SegmentSubject.sh
    
    A command-line tool for subject segmentation in Freesurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        deployed_mcrroot: The root directory of the deployed MATLAB Compiler\
            Runtime.
        arguments: Additional arguments to be passed to the SegmentSubject\
            script.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RunSegmentSubjectShOutputs`).
    """
    params = run_segment_subject_sh_params(
        deployed_mcrroot=deployed_mcrroot,
        arguments=arguments,
    )
    return run_segment_subject_sh_execute(params, runner)


__all__ = [
    "RUN_SEGMENT_SUBJECT_SH_METADATA",
    "RunSegmentSubjectShOutputs",
    "run_segment_subject_sh",
    "run_segment_subject_sh_execute",
    "run_segment_subject_sh_params",
]
