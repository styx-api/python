# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA = Metadata(
    id="0039b4cbbcd262f2ed90f5eb700b50fa19f38118.boutiques",
    name="run_segmentSubjectT1T2_autoEstimateAlveusML.sh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters = typing.TypedDict('RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/run_segmentSubjectT1T2_autoEstimateAlveusML.sh"]],
    "deployed_mcr_root": str,
    "additional_args": typing.NotRequired[str | None],
})
RunSegmentSubjectT1T2AutoEstimateAlveusMlShParametersTagged = typing.TypedDict('RunSegmentSubjectT1T2AutoEstimateAlveusMlShParametersTagged', {
    "@type": typing.Literal["freesurfer/run_segmentSubjectT1T2_autoEstimateAlveusML.sh"],
    "deployed_mcr_root": str,
    "additional_args": typing.NotRequired[str | None],
})


class RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs(typing.NamedTuple):
    """
    Output object returned when calling `RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params(
    deployed_mcr_root: str,
    additional_args: str | None = None,
) -> RunSegmentSubjectT1T2AutoEstimateAlveusMlShParametersTagged:
    """
    Build parameters.
    
    Args:
        deployed_mcr_root: Root directory for the deployed MATLAB Compiler\
            Runtime (MCR).
        additional_args: Additional command-line arguments for the underlying\
            processing tool.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/run_segmentSubjectT1T2_autoEstimateAlveusML.sh",
        "deployed_mcr_root": deployed_mcr_root,
    }
    if additional_args is not None:
        params["additional_args"] = additional_args
    return params


def run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_cargs(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("run_segmentSubjectT1T2_autoEstimateAlveusML.sh")
    cargs.append(params.get("deployed_mcr_root", None))
    if params.get("additional_args", None) is not None:
        cargs.append(params.get("additional_args", None))
    return cargs


def run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_outputs(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    execution: Execution,
) -> RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs(
        root=execution.output_file("."),
    )
    return ret


def run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    runner: Runner | None = None,
) -> RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs:
    """
    run_segmentSubjectT1T2_autoEstimateAlveusML.sh
    
    Automated segmentation tool for T1 and T2 weighted images to estimate the
    Alveus.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA)
    params = execution.params(params)
    cargs = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_cargs(params, execution)
    ret = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_outputs(params, execution)
    execution.run(cargs)
    return ret


def run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh(
    deployed_mcr_root: str,
    additional_args: str | None = None,
    runner: Runner | None = None,
) -> RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs:
    """
    run_segmentSubjectT1T2_autoEstimateAlveusML.sh
    
    Automated segmentation tool for T1 and T2 weighted images to estimate the
    Alveus.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        deployed_mcr_root: Root directory for the deployed MATLAB Compiler\
            Runtime (MCR).
        additional_args: Additional command-line arguments for the underlying\
            processing tool.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs`).
    """
    params = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params(
        deployed_mcr_root=deployed_mcr_root,
        additional_args=additional_args,
    )
    return run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute(params, runner)


__all__ = [
    "RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA",
    "RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs",
    "run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh",
    "run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute",
    "run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params",
]
