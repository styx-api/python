# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

SEGMENT_THALAMIC_NUCLEI_SH_METADATA = Metadata(
    id="84a6eb3421d82b05e58b49ad9846e7c894e8a995.boutiques",
    name="segmentThalamicNuclei.sh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


SegmentThalamicNucleiShParameters = typing.TypedDict('SegmentThalamicNucleiShParameters', {
    "@type": typing.NotRequired[typing.Literal["freesurfer/segmentThalamicNuclei.sh"]],
    "subject_id": str,
    "output_dir": str,
})
SegmentThalamicNucleiShParametersTagged = typing.TypedDict('SegmentThalamicNucleiShParametersTagged', {
    "@type": typing.Literal["freesurfer/segmentThalamicNuclei.sh"],
    "subject_id": str,
    "output_dir": str,
})


class SegmentThalamicNucleiShOutputs(typing.NamedTuple):
    """
    Output object returned when calling `SegmentThalamicNucleiShParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    thalamic_nuclei_output: OutputPathType
    """Segmented thalamic nuclei output file"""


def segment_thalamic_nuclei_sh_params(
    subject_id: str,
    output_dir: str,
) -> SegmentThalamicNucleiShParametersTagged:
    """
    Build parameters.
    
    Args:
        subject_id: Subject ID for segmentation.
        output_dir: Output directory for the segmented thalamic nuclei.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer/segmentThalamicNuclei.sh",
        "subject_id": subject_id,
        "output_dir": output_dir,
    }
    return params


def segment_thalamic_nuclei_sh_cargs(
    params: SegmentThalamicNucleiShParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("segmentThalamicNuclei.sh")
    cargs.append(params.get("subject_id", None))
    cargs.append(params.get("output_dir", None))
    return cargs


def segment_thalamic_nuclei_sh_outputs(
    params: SegmentThalamicNucleiShParameters,
    execution: Execution,
) -> SegmentThalamicNucleiShOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = SegmentThalamicNucleiShOutputs(
        root=execution.output_file("."),
        thalamic_nuclei_output=execution.output_file(params.get("output_dir", None) + "/" + params.get("subject_id", None) + "_thalamic_nuclei.mgz"),
    )
    return ret


def segment_thalamic_nuclei_sh_execute(
    params: SegmentThalamicNucleiShParameters,
    runner: Runner | None = None,
) -> SegmentThalamicNucleiShOutputs:
    """
    segmentThalamicNuclei.sh
    
    Segment the thalamic nuclei using FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SegmentThalamicNucleiShOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SEGMENT_THALAMIC_NUCLEI_SH_METADATA)
    params = execution.params(params)
    cargs = segment_thalamic_nuclei_sh_cargs(params, execution)
    ret = segment_thalamic_nuclei_sh_outputs(params, execution)
    execution.run(cargs)
    return ret


def segment_thalamic_nuclei_sh(
    subject_id: str,
    output_dir: str,
    runner: Runner | None = None,
) -> SegmentThalamicNucleiShOutputs:
    """
    segmentThalamicNuclei.sh
    
    Segment the thalamic nuclei using FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_id: Subject ID for segmentation.
        output_dir: Output directory for the segmented thalamic nuclei.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SegmentThalamicNucleiShOutputs`).
    """
    params = segment_thalamic_nuclei_sh_params(
        subject_id=subject_id,
        output_dir=output_dir,
    )
    return segment_thalamic_nuclei_sh_execute(params, runner)


__all__ = [
    "SEGMENT_THALAMIC_NUCLEI_SH_METADATA",
    "SegmentThalamicNucleiShOutputs",
    "segment_thalamic_nuclei_sh",
    "segment_thalamic_nuclei_sh_execute",
    "segment_thalamic_nuclei_sh_params",
]
