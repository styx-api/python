# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

FTOZ_METADATA = Metadata(
    id="ecece51316461a6d2557128b085434d76fd993fe.boutiques",
    name="ftoz",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


FtozParameters = typing.TypedDict('FtozParameters', {
    "@type": typing.NotRequired[typing.Literal["fsl/ftoz"]],
    "input_file": InputPathType,
    "dof1": float,
    "dof2": float,
    "output_file": typing.NotRequired[str | None],
    "help_flag": bool,
})
FtozParametersTagged = typing.TypedDict('FtozParametersTagged', {
    "@type": typing.Literal["fsl/ftoz"],
    "input_file": InputPathType,
    "dof1": float,
    "dof2": float,
    "output_file": typing.NotRequired[str | None],
    "help_flag": bool,
})


class FtozOutputs(typing.NamedTuple):
    """
    Output object returned when calling `FtozParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_zscores: OutputPathType | None
    """File containing the converted Z-scores"""


def ftoz_params(
    input_file: InputPathType,
    dof1: float,
    dof2: float,
    output_file: str | None = None,
    help_flag: bool = False,
) -> FtozParametersTagged:
    """
    Build parameters.
    
    Args:
        input_file: File containing F-statistics.
        dof1: Degrees of freedom 1 for F-to-Z conversion.
        dof2: Degrees of freedom 2 for F-to-Z conversion.
        output_file: Output file for Z-scores.
        help_flag: Display this help and exit.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "fsl/ftoz",
        "input_file": input_file,
        "dof1": dof1,
        "dof2": dof2,
        "help_flag": help_flag,
    }
    if output_file is not None:
        params["output_file"] = output_file
    return params


def ftoz_cargs(
    params: FtozParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("ftoz")
    cargs.append(execution.input_file(params.get("input_file", None)))
    cargs.append(str(params.get("dof1", None)))
    cargs.append(str(params.get("dof2", None)))
    if params.get("output_file", None) is not None:
        cargs.extend([
            "-zout",
            params.get("output_file", None)
        ])
    if params.get("help_flag", False):
        cargs.append("-help")
    return cargs


def ftoz_outputs(
    params: FtozParameters,
    execution: Execution,
) -> FtozOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = FtozOutputs(
        root=execution.output_file("."),
        output_zscores=execution.output_file(params.get("output_file", None)) if (params.get("output_file") is not None) else None,
    )
    return ret


def ftoz_execute(
    params: FtozParameters,
    runner: Runner | None = None,
) -> FtozOutputs:
    """
    ftoz
    
    Convert F-statistics to Z-scores.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FtozOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FTOZ_METADATA)
    params = execution.params(params)
    cargs = ftoz_cargs(params, execution)
    ret = ftoz_outputs(params, execution)
    execution.run(cargs)
    return ret


def ftoz(
    input_file: InputPathType,
    dof1: float,
    dof2: float,
    output_file: str | None = None,
    help_flag: bool = False,
    runner: Runner | None = None,
) -> FtozOutputs:
    """
    ftoz
    
    Convert F-statistics to Z-scores.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        input_file: File containing F-statistics.
        dof1: Degrees of freedom 1 for F-to-Z conversion.
        dof2: Degrees of freedom 2 for F-to-Z conversion.
        output_file: Output file for Z-scores.
        help_flag: Display this help and exit.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FtozOutputs`).
    """
    params = ftoz_params(
        input_file=input_file,
        dof1=dof1,
        dof2=dof2,
        output_file=output_file,
        help_flag=help_flag,
    )
    return ftoz_execute(params, runner)


__all__ = [
    "FTOZ_METADATA",
    "FtozOutputs",
    "ftoz",
    "ftoz_execute",
    "ftoz_params",
]
