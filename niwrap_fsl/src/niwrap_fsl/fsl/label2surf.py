# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

LABEL2SURF_METADATA = Metadata(
    id="3fd2d28069b551984e7c4be3e912343414841e21.boutiques",
    name="label2surf",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


Label2surfParameters = typing.TypedDict('Label2surfParameters', {
    "@type": typing.NotRequired[typing.Literal["fsl/label2surf"]],
    "input_surface": InputPathType,
    "output_surface": str,
    "labels": InputPathType,
    "verbose_flag": bool,
    "help_flag": bool,
})
Label2surfParametersTagged = typing.TypedDict('Label2surfParametersTagged', {
    "@type": typing.Literal["fsl/label2surf"],
    "input_surface": InputPathType,
    "output_surface": str,
    "labels": InputPathType,
    "verbose_flag": bool,
    "help_flag": bool,
})


class Label2surfOutputs(typing.NamedTuple):
    """
    Output object returned when calling `Label2surfParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    out_surf: OutputPathType
    """Resulting output surface file"""


def label2surf_params(
    input_surface: InputPathType,
    output_surface: str,
    labels: InputPathType,
    verbose_flag: bool = False,
    help_flag: bool = False,
) -> Label2surfParametersTagged:
    """
    Build parameters.
    
    Args:
        input_surface: Input surface file.
        output_surface: Output surface file.
        labels: ASCII list of label files.
        verbose_flag: Switch on diagnostic messages.
        help_flag: Display help message.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "fsl/label2surf",
        "input_surface": input_surface,
        "output_surface": output_surface,
        "labels": labels,
        "verbose_flag": verbose_flag,
        "help_flag": help_flag,
    }
    return params


def label2surf_cargs(
    params: Label2surfParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("label2surf")
    cargs.extend([
        "--surf",
        execution.input_file(params.get("input_surface", None))
    ])
    cargs.extend([
        "--out",
        params.get("output_surface", None)
    ])
    cargs.extend([
        "--labels",
        execution.input_file(params.get("labels", None))
    ])
    if params.get("verbose_flag", False):
        cargs.append("--verbose")
    if params.get("help_flag", False):
        cargs.append("--help")
    return cargs


def label2surf_outputs(
    params: Label2surfParameters,
    execution: Execution,
) -> Label2surfOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = Label2surfOutputs(
        root=execution.output_file("."),
        out_surf=execution.output_file(params.get("output_surface", None)),
    )
    return ret


def label2surf_execute(
    params: Label2surfParameters,
    runner: Runner | None = None,
) -> Label2surfOutputs:
    """
    label2surf
    
    Transform a group of labels into a surface.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `Label2surfOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(LABEL2SURF_METADATA)
    params = execution.params(params)
    cargs = label2surf_cargs(params, execution)
    ret = label2surf_outputs(params, execution)
    execution.run(cargs)
    return ret


def label2surf(
    input_surface: InputPathType,
    output_surface: str,
    labels: InputPathType,
    verbose_flag: bool = False,
    help_flag: bool = False,
    runner: Runner | None = None,
) -> Label2surfOutputs:
    """
    label2surf
    
    Transform a group of labels into a surface.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        input_surface: Input surface file.
        output_surface: Output surface file.
        labels: ASCII list of label files.
        verbose_flag: Switch on diagnostic messages.
        help_flag: Display help message.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `Label2surfOutputs`).
    """
    params = label2surf_params(
        input_surface=input_surface,
        output_surface=output_surface,
        labels=labels,
        verbose_flag=verbose_flag,
        help_flag=help_flag,
    )
    return label2surf_execute(params, runner)


__all__ = [
    "LABEL2SURF_METADATA",
    "Label2surfOutputs",
    "label2surf",
    "label2surf_execute",
    "label2surf_params",
]
