# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

SIENA_FLOW2STD_METADATA = Metadata(
    id="9f3594c79c77c6b8469bf73b214e62998b7ac4ec.boutiques",
    name="siena_flow2std",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


SienaFlow2stdParameters = typing.TypedDict('SienaFlow2stdParameters', {
    "@type": typing.NotRequired[typing.Literal["fsl/siena_flow2std"]],
    "fileroot1": str,
    "fileroot2": str,
    "sigma": typing.NotRequired[float | None],
    "debug_flag": bool,
})
SienaFlow2stdParametersTagged = typing.TypedDict('SienaFlow2stdParametersTagged', {
    "@type": typing.Literal["fsl/siena_flow2std"],
    "fileroot1": str,
    "fileroot2": str,
    "sigma": typing.NotRequired[float | None],
    "debug_flag": bool,
})


class SienaFlow2stdOutputs(typing.NamedTuple):
    """
    Output object returned when calling `SienaFlow2stdParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def siena_flow2std_params(
    fileroot1: str,
    fileroot2: str,
    sigma: float | None = None,
    debug_flag: bool = False,
) -> SienaFlow2stdParametersTagged:
    """
    Build parameters.
    
    Args:
        fileroot1: Input file root 1.
        fileroot2: Input file root 2.
        sigma: Spatial smoothing of standard-space edge-flow image, sigma\
            (HWHM) in mm (default=5).
        debug_flag: Debug (don't delete intermediate files).
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "fsl/siena_flow2std",
        "fileroot1": fileroot1,
        "fileroot2": fileroot2,
        "debug_flag": debug_flag,
    }
    if sigma is not None:
        params["sigma"] = sigma
    return params


def siena_flow2std_cargs(
    params: SienaFlow2stdParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("siena_flow2std")
    cargs.append(params.get("fileroot1", None))
    cargs.append(params.get("fileroot2", None))
    if params.get("sigma", None) is not None:
        cargs.extend([
            "-s",
            str(params.get("sigma", None))
        ])
    if params.get("debug_flag", False):
        cargs.append("-d")
    return cargs


def siena_flow2std_outputs(
    params: SienaFlow2stdParameters,
    execution: Execution,
) -> SienaFlow2stdOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = SienaFlow2stdOutputs(
        root=execution.output_file("."),
    )
    return ret


def siena_flow2std_execute(
    params: SienaFlow2stdParameters,
    runner: Runner | None = None,
) -> SienaFlow2stdOutputs:
    """
    siena_flow2std
    
    Convert edge flow to standard space.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SienaFlow2stdOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SIENA_FLOW2STD_METADATA)
    params = execution.params(params)
    cargs = siena_flow2std_cargs(params, execution)
    ret = siena_flow2std_outputs(params, execution)
    execution.run(cargs)
    return ret


def siena_flow2std(
    fileroot1: str,
    fileroot2: str,
    sigma: float | None = None,
    debug_flag: bool = False,
    runner: Runner | None = None,
) -> SienaFlow2stdOutputs:
    """
    siena_flow2std
    
    Convert edge flow to standard space.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        fileroot1: Input file root 1.
        fileroot2: Input file root 2.
        sigma: Spatial smoothing of standard-space edge-flow image, sigma\
            (HWHM) in mm (default=5).
        debug_flag: Debug (don't delete intermediate files).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SienaFlow2stdOutputs`).
    """
    params = siena_flow2std_params(
        fileroot1=fileroot1,
        fileroot2=fileroot2,
        sigma=sigma,
        debug_flag=debug_flag,
    )
    return siena_flow2std_execute(params, runner)


__all__ = [
    "SIENA_FLOW2STD_METADATA",
    "SienaFlow2stdOutputs",
    "siena_flow2std",
    "siena_flow2std_execute",
    "siena_flow2std_params",
]
