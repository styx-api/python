# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

TBSS_DEPROJECT_METADATA = Metadata(
    id="7be2bd59b3afba55103f25bffec1ef4b17196214.boutiques",
    name="tbss_deproject",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


TbssDeprojectParameters = typing.TypedDict('TbssDeprojectParameters', {
    "@type": typing.NotRequired[typing.Literal["fsl/tbss_deproject"]],
    "skeleton_space_input_image": InputPathType,
    "final_space_option": int,
    "index_image_flag": bool,
})
TbssDeprojectParametersTagged = typing.TypedDict('TbssDeprojectParametersTagged', {
    "@type": typing.Literal["fsl/tbss_deproject"],
    "skeleton_space_input_image": InputPathType,
    "final_space_option": int,
    "index_image_flag": bool,
})


class TbssDeprojectOutputs(typing.NamedTuple):
    """
    Output object returned when calling `TbssDeprojectParameters(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    stats_output: OutputPathType
    """Output in stats directory."""
    fa_output: OutputPathType
    """Output in FA directory."""


def tbss_deproject_params(
    skeleton_space_input_image: InputPathType,
    final_space_option: int,
    index_image_flag: bool = False,
) -> TbssDeprojectParametersTagged:
    """
    Build parameters.
    
    Args:
        skeleton_space_input_image: Skeleton space input image.
        final_space_option: Final space option.
        index_image_flag: Assume that the skeleton space input image contains\
            one or more integer index numbers and ensure that those exact values\
            are deprojected without being changed by interpolations.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "fsl/tbss_deproject",
        "skeleton_space_input_image": skeleton_space_input_image,
        "final_space_option": final_space_option,
        "index_image_flag": index_image_flag,
    }
    return params


def tbss_deproject_cargs(
    params: TbssDeprojectParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("tbss_deproject")
    cargs.append(execution.input_file(params.get("skeleton_space_input_image", None)))
    cargs.append(str(params.get("final_space_option", None)))
    if params.get("index_image_flag", False):
        cargs.append("-n")
    return cargs


def tbss_deproject_outputs(
    params: TbssDeprojectParameters,
    execution: Execution,
) -> TbssDeprojectOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = TbssDeprojectOutputs(
        root=execution.output_file("."),
        stats_output=execution.output_file("stats/" + pathlib.Path(params.get("skeleton_space_input_image", None)).name),
        fa_output=execution.output_file("FA/" + pathlib.Path(params.get("skeleton_space_input_image", None)).name),
    )
    return ret


def tbss_deproject_execute(
    params: TbssDeprojectParameters,
    runner: Runner | None = None,
) -> TbssDeprojectOutputs:
    """
    tbss_deproject
    
    Tool to deproject images from skeleton space to final space.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `TbssDeprojectOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(TBSS_DEPROJECT_METADATA)
    params = execution.params(params)
    cargs = tbss_deproject_cargs(params, execution)
    ret = tbss_deproject_outputs(params, execution)
    execution.run(cargs)
    return ret


def tbss_deproject(
    skeleton_space_input_image: InputPathType,
    final_space_option: int,
    index_image_flag: bool = False,
    runner: Runner | None = None,
) -> TbssDeprojectOutputs:
    """
    tbss_deproject
    
    Tool to deproject images from skeleton space to final space.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        skeleton_space_input_image: Skeleton space input image.
        final_space_option: Final space option.
        index_image_flag: Assume that the skeleton space input image contains\
            one or more integer index numbers and ensure that those exact values\
            are deprojected without being changed by interpolations.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `TbssDeprojectOutputs`).
    """
    params = tbss_deproject_params(
        skeleton_space_input_image=skeleton_space_input_image,
        final_space_option=final_space_option,
        index_image_flag=index_image_flag,
    )
    return tbss_deproject_execute(params, runner)


__all__ = [
    "TBSS_DEPROJECT_METADATA",
    "TbssDeprojectOutputs",
    "tbss_deproject",
    "tbss_deproject_execute",
    "tbss_deproject_params",
]
